openapi: 3.0.0
info:
  title: Hospitality Management
  description: Hospitality Management API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://hospitality-api.scoduscorp.com
    description: server
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > Authentication
  - name: Admin > Restaurant
  - name: Admin > Restaurant > customer
  - name: Admin > Restaurant > Restaurant payment options
  - name: Admin > Restaurant > Restaurant Cashier
  - name: Admin > Restaurant > Restaurant Cashier Session
  - name: Admin > Restaurant > Restaurant PickUp Users
  - name: Admin > Restaurant > Restaurant Customer Partial Payments
  - name: Admin > Restaurant > Restaurant Order Payment
  - name: Admin > Restaurant > Restaurant Order Details
  - name: Admin > Restaurant > Restaurant product variation
  - name: Admin > Restaurant > Restaurant products
  - name: Admin > Restaurant > Restaurant product category
  - name: Admin > Restaurant > Restaurant Reports
  - name: Admin > Restaurant > Favourite Menu Items
  - name: Admin > Restaurant > Restaurant Order
  - name: Admin > Restaurant > Restaurant floor
  - name: Admin > Restaurant > Restaurant table
  - name: Admin > Restaurant > Kitchen Order Ticket
  - name: Admin > Restaurant > Bar Order Ticket
  - name: Admin > Restaurant > Ask Bill
  - name: Admin > Restaurant > KOT Items
  - name: Admin > Restaurant > BOT Items
  - name: Admin > Restaurant > Delivery partner
  - name: Admin > Restaurant > Self Delivery User
  - name: Admin > Restaurant > Split Bill
  - name: Admin > Restaurant > Cash In/Out
  - name: Admin > Restaurant > Topping Items
  - name: Admin > Restaurant > Manager Session
  - name: Admin > Restaurant > Day Book
  - name: Admin > Restaurant > Restaurant Dashboard
  - name: Admin > Restaurant > Delivery Partner Payment
  - name: Admin > Restaurant > QR Payment Image
  - name: Admin > Restaurant > Complementary User
  - name: Admin > Restaurant > FonePay
  - name: Admin > Restaurant > Hotel
  - name: Admin > Printers
  - name: Admin > Human Resource
  - name: Admin > Human Resource > department
  - name: Admin > Human Resource > positions
  - name: Admin > Human Resource > employees
  - name: Admin > Duty Roster
  - name: Admin > Duty Roster > roster time
  - name: Admin > Duty Roster > roster task
  - name: Admin > Duty Roster > restaurant roster
  - name: Admin > Hotel
  - name: Admin > Hotel > hotel floor -old
  - name: Admin > Hotel > Floor Plan
  - name: Admin > Hotel > rooms
  - name: Admin > Hotel > rooms > maintenances
  - name: Admin > Hotel > amenities
  - name: Admin > Hotel > room type
  - name: Admin > Hotel > room type > room type discount
  - name: Admin > Hotel > room type > room type breakdown
  - name: Admin > Hotel > room type > media
  - name: Admin > Hotel > reservation source
  - name: Admin > Hotel > reservation
  - name: Admin > Hotel > reservation > reservation detail
  - name: Admin > Hotel > reservation > reservation product
  - name: Admin > Hotel > reservation > reservation guests
  - name: Admin > Hotel > products
  - name: Admin > Hotel > employee
  - name: Admin > Hotel > employee > assignments
  - name: Admin > Hotel > employee > assignments > check list
  - name: Admin > Hotel > cleaning check list
  - name: Admin > Inventory
  - name: Admin > Inventory > Unit of Measurement
  - name: Admin > Inventory > Inventory Products
  - name: Admin > Inventory > Inventory Adjustment
  - name: Admin > Inventory > Inventory Audit
  - name: Admin > Inventory > Storage Area
  - name: Admin > user
  - name: Admin > roles OLD
  - name: Admin > Company OLD
  - name: Admin > Permission
  - name: Admin > Role
  - name: Admin > Company
  - name: Admin > Company > Company Payment Option
  - name: Admin > Branch
  - name: Admin > Payment Option
  - name: Admin > Supplier
  - name: Admin > Supplier Product
  - name: Admin > Purchase
  - name: Admin > Purchase Return
  - name: Admin > Supplier Payment
  - name: Admin > Event Booking
    description: >-
      Documentation of used quering library:  

      [https://spatie.be/docs/laravel-query-builder](https://spatie.be/docs/laravel-query-builder)


      Each of these parameters are applicable for every `fetch all` query:


      - `paginate: 0|1`
          
      - `limit: 10`
          
      - `page: 1`
          

      **Filtering**:


      ```

      filter[name]=john&filter[email]=gmail //where name like john and email
      like gmail

      filter[name]=seb,freek //where name like seb or freek

       ```

      **Sorting**:


      ```

      sort=name // sort column name in ascending order

      sort=-name // sort column name in descending order

       ```

      **Including related relationships**:


      ```

      include=posts,permissions //include posts and permissions relationships of
      the records to be fetched

       ```
  - name: Admin > Event Booking > Shifts
  - name: Admin > Event Booking > Types
  - name: Admin > Event Booking > Source
  - name: Admin > Event Booking > Categories
  - name: Admin > Event Booking > Halls
  - name: Admin > Event Booking > Bookings
  - name: Admin > Event Booking > Reports
  - name: Admin > V2
  - name: Public
  - name: Public > auth
  - name: Superadmin
  - name: Superadmin > Authentication
  - name: Superadmin > company old
  - name: Superadmin > business service old
  - name: Superadmin > business admin old
  - name: Superadmin > Permission
  - name: Superadmin > Role
  - name: Superadmin > User
  - name: Superadmin > Dashboard
  - name: Superadmin > Package
  - name: Superadmin > Company
  - name: Superadmin > Company > Package Subscription
  - name: Superadmin > Service
  - name: Superadmin > Payment Option
  - name: Superadmin > Bug
  - name: Superadmin > Bug Feedback
  - name: Superadmin > Site Setting
  - name: Superadmin > Order
  - name: Superadmin > Fiscal Year
  - name: Superadmin > DB Backup
  - name: Superadmin > Print Issue
  - name: Superadmin > System Sync
paths:
  /api/admin/login:
    post:
      tags:
        - Public > auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                password:
                  type: integer
                  example: '12345'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/refresh-token/{refresh_token}:
    post:
      tags:
        - Admin > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/logout:
    post:
      tags:
        - Admin > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user-detail:
    get:
      tags:
        - Admin > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/list-user-branches:
    get:
      tags:
        - Admin > Authentication
      summary: list user branches
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/update-user-detail:
    post:
      tags:
        - Admin > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                name:
                  type: string
                  example: Super admin
                profile_image:
                  type: string
                  format: binary
                delete_image:
                  type: string
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/change-password:
    post:
      tags:
        - Admin > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delete-user:
    delete:
      tags:
        - Admin > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/invitation-accept-reject:
    post:
      tags:
        - Admin > Authentication
      summary: invitation accept-reject
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: >-
                    eykLUanCwDfzeb3RGdNa6OhapkaqdzUQDEVmbUqaJv1PMOtAVjPWheLYDhRxEufrobSzUbGG3TYWeqjmJR0jXP3APWCkqPde66g8zeuK8DfeWdjHw6lSJdpd1x0y5P2s
                email:
                  type: string
                  example: randommail@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                is_accepted:
                  type: boolean
                  description: true|false
                  example: 'true'
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: email
          in: query
          schema:
            type: string
          example: randommail@gmail.com
        - name: token
          in: query
          schema:
            type: string
          example: >-
            706S7OVmaE2KRzt1IM7JENV9U81WhYuMzGp7C8uPrgV5ZgXxzBQQ4LeEJa2roC3IzRDUcZMp9DwmPPFZ4dSgsk693reNK7Dp78YguUHrPWOrJFEqX3rZ4VZ3rLEMyqxI
        - name: organization
          in: query
          schema:
            type: string
          example: Dicta%20illum%20id%20et%20d
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/my-invitations:
    get:
      tags:
        - Admin > Authentication
      summary: my invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/my-invitation/{id}/accept-reject:
    post:
      tags:
        - Admin > Authentication
      summary: my invitations accept-reject
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: >-
                    jVRbNDicfvdNO3ERhQ32FRQRFuzzs0aUi4lkuHCWprQEFdXMHWKBZrGm2TRhJxzCU7dp6kG13UYVeGTZVLiuC1wvclUZQoJKIJxGtUfNymLaOcr2DLkrt2fyCQ7LqVmb
                is_accepted:
                  type: boolean
                  description: true|false
                  example: 'true'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '42'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers:
    post:
      tags:
        - Admin > Restaurant > customer
      summary: create customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago250@gmail.com
                phone:
                  type: integer
                  example: '4545459'
                address:
                  type: string
                  example: KTM
                vat_number:
                  type: integer
                  example: '45456'
                opening_amount:
                  type: integer
                  example: '200'
                opening_date:
                  type: string
                  example: 2023/01/20
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > customer
      summary: get all customers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/active-customers:
    get:
      tags:
        - Admin > Restaurant > customer
      summary: Active Customers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers/{customer_id}:
    delete:
      tags:
        - Admin > Restaurant > customer
      summary: delete customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > customer
      summary: update customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie2@gmail.com
                phone:
                  type: integer
                  example: '4545454555'
                address:
                  type: string
                  example: Jhapa
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers/1:
    get:
      tags:
        - Admin > Restaurant > customer
      summary: show single customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers/show-orders/1:
    get:
      tags:
        - Admin > Restaurant > customer
      summary: show single customer data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: payment_type
          in: query
          schema:
            type: string
          example: sale
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customer-excel-import:
    post:
      tags:
        - Admin > Restaurant > customer
      summary: Customer excel import
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/excel-sample/{customer}:
    get:
      tags:
        - Admin > Restaurant > customer
      summary: customer excel template export
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: customer
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customer-opening-balance:
    post:
      tags:
        - Admin > Restaurant > customer
      summary: customer opening balance update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                customer_opening_balance:
                  - customer_id: 4
                    opening_balance: 4.5
                  - customer_id: 5
                    opening_balance: 50
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/update-customer-status:
    post:
      tags:
        - Admin > Restaurant > customer
      summary: update customer status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  example: '938'
                status:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-options:
    post:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: create payment option
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: 'IME '
                payment_image:
                  type: string
                  format: binary
                commission_percent:
                  type: integer
                  example: '5'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 06:51:39 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  payment_name: Khalti
                  slug: khalti
                  payment_image: http://localhost:8000/storage/3/download.png
                  created_at: '2023-12-20T06:51:38.000000Z'
                  updated_at: null
                message: Payment Option Has Been Created Successfully!
    get:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: get all product options list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 07:00:13 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    payment_name: Khalti
                    slug: khalti
                    payment_image: http://localhost:8000/storage/3/download.png
                    created_at: '2023-12-20T06:51:38.000000Z'
                    updated_at: null
                  - id: 1
                    payment_name: eSewa
                    slug: esewa
                    payment_image: ''
                    created_at: '2023-12-20T06:50:50.000000Z'
                    updated_at: null
                links:
                  first: http://127.0.0.1:8000/admin/payment-options?page=1
                  last: http://127.0.0.1:8000/admin/payment-options?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/payment-options?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/payment-options
                  per_page: 5
                  to: 2
                  total: 2
  /admin/payment-options/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: update payment options
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: khalti
                payment_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 07:01:54 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  payment_name: khalti
                  slug: khalti
                  payment_image: http://localhost:8000/storage/4/download.png
                  created_at: '2023-12-20T06:51:38.000000Z'
                  updated_at: null
                message: Payment Option Data Has Been Updated Successfully!
    delete:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: delete payment options
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier/today-sales:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: get today sales
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier/sales-history:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: sales history
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cashier/today-credit-sales:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: cashier today credit sales
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cashier/today-credit-settlement:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: cashier today credit settlement
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session:
    post:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: Cashier Session In
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                drawer_amount:
                  type: integer
                  example: '500'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 22 Dec 2023 07:34:14 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  session_in: '2023-12-22 07:34:14'
                  session_out: null
                  user_id: 10
                  status: active
                  created_at: 1 second ago
                  drawer_amount:
                    - id: 1
                      company_id: 1
                      session_id: 1
                      opening_drawer_amount: 500
                      cash_payment_amount: null
                      other_payment_amount: null
                      created_at: '2023-12-22T07:34:14.000000Z'
                      updated_at: '2023-12-22T07:34:14.000000Z'
                message: Session Started successfully!
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: get all cashier session details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '40'
        - name: running-session
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: date
          in: query
          schema:
            type: string
          example: 12-26-2023
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session/status/check-session:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: Cashier Session Check
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session/{session_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: session checkout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cash_payment_amount:
                  type: integer
                  example: '56777'
                other_payment_amount:
                  type: integer
                  example: '56'
                total_cash_in_hand:
                  type: integer
                  example: '556'
                employee_cash_in_hand:
                  type: integer
                  example: '56'
                note:
                  type: string
                  example: fgfh
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: session_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/drawer_amounts:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: get drawer amounts
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 22 Dec 2023 07:37:15 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  drawer_amount:
                    total_drawer_amounts: 500
                  paymentAmount:
                    cash_payment: null
                    other_payment: null
                    total_sales: null
                  total_cash_in_hand: '500.00'
  /api/admin/pickup-users:
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: create pickup users
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Nitesh Hamal
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pickup-users:
    get:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: get all pick up user
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 23 Jan 2024 07:08:24 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    full_name: Nitesh Hamal
                    mobile_no: '9813371345'
                    created_at: '2023-12-21T05:49:10.000000Z'
                    pending_order:
                      - id: 123
                        order_number: 202422EEQXJ
                        company_id: 1
                        user_id: 10
                        table_id: 5
                        customer_id: 1
                        pickup_user_id: 1
                        delivery_partner_id: 2
                        description: ab cd ef gh
                        status: pending
                        created_at: '2024-01-22T07:39:06.000000Z'
                        updated_at: '2024-01-22T07:39:06.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/pickup-users?page=1
                  last: http://127.0.0.1:8000/admin/pickup-users?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/pickup-users?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/pickup-users
                  per_page: 2
                  to: 1
                  total: 1
  /admin/pickup-users/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: delete pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: get single order data by take away user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: update pickup user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Pravesh Rai
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pickup-users/order/update:
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: update order of take away user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 51
                description: ab cd ef gh
                pickup_user_id: 1
                productDetails:
                  - product_id: 1
                    price: 100
                    quantity: 5
                    topping_details:
                      - topping_product_id: 5
                        topping_quantity: 50
                        topping_price: 110
                      - topping_product_id: 7
                        topping_quantity: 50
                        topping_price: 110
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customer-partial-payment/1:
    post:
      tags:
        - Admin > Restaurant > Restaurant Customer Partial Payments
      summary: update customer partial payment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                paid_amount:
                  type: integer
                  example: '50'
                payment_method_id:
                  type: integer
                  example: '1'
                customer_id:
                  type: integer
                  example: '1'
                payment_method:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customer-partial-payment/order-items/{id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Customer Partial Payments
      summary: get order items data by customer partial id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/order-payments:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: store order payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payment_method: 1
                table_id: 5
                customer_id: 1
                order_id: 56
                subtotal: 344
                tax: 3
                discount: 3434
                discount_type: rupees
                net_total: 100
                paid: 400
                return: 344
                net_amount: 34434
                name: Pravesh Rai
                email: pravesh@gmail.com
                phone: 983443354
                address: lalitpur
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: get all order payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: delete order payment
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/payment-order-details/{table_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: Show payment order details by table number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 12 Jan 2024 11:42:56 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - variation_name: Chaumin
                    total_quantity: '18'
                    price: 150
                    total_amount: 2700
                  - variation_name: Fry Momo
                    total_quantity: '45'
                    price: 100
                    total_amount: 4500
                  - variation_name: Chaumin
                    total_quantity: '45'
                    price: 100
                    total_amount: 4500
                  - variation_name: Chaumin
                    total_quantity: '2'
                    price: 150
                    total_amount: 300
                  - variation_name: Fry Momo
                    total_quantity: '5'
                    price: 100
                    total_amount: 500
                  - variation_name: Chaumin
                    total_quantity: '5'
                    price: 100
                    total_amount: 500
  /admin/orders/all/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: get single order payment details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/void-order-payment/{order_id}:
    patch:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: void order payment
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/complementary-payment:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: complementary payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table_id: 5
                customer_id: 1
                order_id: 56
                subtotal: 344
                tax: 3
                net_total: 100
                net_amount: 34434
                guest_company_name: Pravesh Rai
                pan_number: pravesh@gmail.com
                contact: 983443354
                address: lalitpur
                approved_by: Hancie
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: delete order details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: update order details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: integer
                  example: '2'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/status/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: ordered
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: get all order detail
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations:
    get:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: get all product variations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Momo
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 10:54:36 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 5
                    variation_name: Steam Momo
                    price: 100
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
                  - id: 6
                    variation_name: Fry Momo
                    price: 200
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
  /admin/product-variations/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: delete product variation
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations/search/product_variation:
    get:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: search product variation in menu
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Pizza
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: create product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Momo
                product_category_id: 2
                ingredient: gffg
                description: fgfgfg
                price: 550
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 07:18:08 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  product_name: Momo
                  slug: momo
                  product_category_id: 1
                  base_price: 550
                  ingredient: gffg
                  description: fgfgfg
                  product_image: ''
                  has_variation: 1
                  product_variation:
                    - id: 1
                      variation_name: Steam Momo
                      price: 100
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                    - id: 2
                      variation_name: Fry Momo
                      price: 200
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                message: Product Has Been Created Successfully!
    get:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: get all products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: update product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Chicken
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                base_price: 550
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: delete product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/product/update-show-menu-status:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: update show menu item status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  example: '1'
                show_menu_item:
                  type: string
                  example: inactive
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/store-multiple-products:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: store multiple products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_category_id: 1
                product_group_id: 4
                products:
                  - product_name: Momo
                    price: 50
                    ingredient: gffg
                    description: fgfgfg
                    has_inventory: 'true'
                    has_inventory_tracking:
                      - inventory_product_id: 1
                        unit_name: Bottle
                        size: '200'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/transfer-menu-item/94:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: Tranfer Order Items To Another Table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                destination_table_id: 100
                order_id: 1
                transfer_order_items:
                  - kot_item_id: 745
                    product_id: 316
                    new_quantity: 5
                    price: 190
                  - kot_item_id: 721
                    product_id: 284
                    old_quantity: 5
                    new_quantity: 5
                    price: 250
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/product-rate-update:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: Product rate update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                products_data:
                  - product_id: 1
                    product_rate: 20
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/product-category:
    post:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: create product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Budweiser
                parent_category_id:
                  type: integer
                  example: '2'
                description:
                  type: string
                  example: My momo
                bar:
                  type: integer
                  example: '1'
                category_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: get all product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: update product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '20'
                description:
                  type: string
                  example: My momo
                category_image:
                  type: string
                  format: binary
                bar:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: delete product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show single product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all/{payment_order_no}:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: get single data for order table
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: payment_order_no
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/nested-product-category:
    get:
      tags:
        - Public > auth
      summary: show all nested product category
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 01 Jan 2024 08:52:43 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 3
                    category_name: Drink
                    slug: ''
                    parent_category_id: null
                    bar: 0
                    description: My momo
                    category_image: ''
                    status: 0
                    created_at: '2023-11-28T09:35:58.000000Z'
                    updated_at: '2023-11-28T09:35:58.000000Z'
                    parent_category: null
                    child_categories:
                      - id: 1
                        category_name: Juice
                        slug: momo
                        parent_category_id: 3
                        bar: null
                        description: My momo
                        category_image: ''
                        status: 0
                        created_at: '2023-11-28T09:35:58.000000Z'
                        updated_at: '2023-11-28T09:35:58.000000Z'
                        products:
                          - id: 1
                            product_name: Momo
                            slug: momo
                            product_category_id: 1
                            base_price: 550
                            ingredient: gffg
                            description: fgfgfg
                            product_image: ''
                            has_variation: 1
                            product_variation:
                              - id: 2
                                variation_name: Tea
                                price: 200
                                created_at: '2023-11-28T09:35:43.000000Z'
                                updated_at: '2023-11-28T09:35:43.000000Z'
                              - id: 45
                                variation_name: Steam Momo
                                price: 100
                                created_at: '2023-11-28T09:35:43.000000Z'
                                updated_at: '2023-11-28T09:35:43.000000Z'
                    products: []
                  - id: 4
                    category_name: Food
                    slug: ''
                    parent_category_id: null
                    bar: 0
                    description: My momo
                    category_image: ''
                    status: 0
                    created_at: '2023-11-28T09:35:58.000000Z'
                    updated_at: '2023-11-28T09:35:58.000000Z'
                    parent_category: null
                    child_categories:
                      - id: 2
                        category_name: Momo
                        slug: momo
                        parent_category_id: 4
                        bar: 0
                        description: My momo
                        category_image: ''
                        status: 0
                        created_at: '2023-11-28T09:35:58.000000Z'
                        updated_at: '2023-11-28T09:35:58.000000Z'
                        products: []
                    products: []
  /admin/categories/groups:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show all prodcut category group
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parent-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show parent category only
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/transfer-menu-items:
    post:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: transfer all category and products
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '13'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/daily-income:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: daily income
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-04'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-01-06'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-user:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales by user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales by category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/cancelled-orders:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: cancelled orders report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/income-by-time:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: income by time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: date
          in: query
          schema:
            type: string
          example: 12-04-2023
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/daily-reports:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: daily reports
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: date
          in: query
          schema:
            type: string
          example: 04-15-2024
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/menu-rate-history:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: menu rate history report
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '3'
        - name: start-date
          in: query
          schema:
            type: string
        - name: end-date
          in: query
          schema:
            type: string
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: category_id
          in: query
          schema:
            type: integer
          example: '64'
        - name: group_id
          in: query
          schema:
            type: string
        - name: item_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/kot-bot-correction-history:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: kot bot correction history report
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '3'
        - name: start-date
          in: query
          schema:
            type: string
        - name: end-date
          in: query
          schema:
            type: string
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/discount-amount-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: discount amount report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: start-date
          in: query
          schema:
            type: string
          example: '2024-05-01'
        - name: end-date
          in: query
          schema:
            type: string
          example: '2025-12-01'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/discount-amount-report-summary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: discount amount report summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-07-16'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-08-16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/sales-summary-item:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales summary report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: sales_type
          in: query
          schema:
            type: string
        - name: delivery_partner_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-11-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-11-30'
        - name: payment_option_id
          in: query
          schema:
            type: string
          description: credit
        - name: order_id
          in: query
          schema:
            type: string
          description: '25851'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/sales-summary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales summary total
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2025-02-27'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2025-03-13'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/order-cancellation-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: order cancellation report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/order-cancellation-report-summary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: order calcellation report summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/floor-table-sales-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: flooar and table sales report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/sales-by-item:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales by item report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/provisional-invoice:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: provisional report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/unsettled-order-payment:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: void order payment report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/customer-payments/:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer payment report
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/inventory-position:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: inventory position report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/inventory-adjustments:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: inventory adjustment report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/inventory-consumption:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: inventory consumption report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-12-23'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-26'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/supplier-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: supplier report
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: supplier_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-06-17'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-06-17'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/purchase-bill:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: purchase bill report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/purchase-return-bill:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: purchase return report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '3'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/sales-summary-excel:
    post:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales summary excel download
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: sales_type
          in: query
          schema:
            type: string
        - name: delivery_partner_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-10-07'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-07'
        - name: payment_option_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/floor-table-sales-report-excel:
    post:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: floor and table sales excel export
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/purchase-bill-excel:
    post:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: purchase report excel download
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-06-18'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/complementary-payments:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: complementary report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/daily-sales-summary-total:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: daily-sales-summary-total
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/menu-performance-items:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: menu performance report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-09-07'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-09-07'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/menu-performance-summary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: menu performance summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2025-02-27'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2025-03-13'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/void-due-payment:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer due void report
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/daily-sales-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: daily sales report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-11-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-11-29'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/customer-payments-total:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer order report total
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: customer_id
          in: query
          schema:
            type: integer
          example: '146'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-03-30'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-03-30'
        - name: payment_type
          in: query
          schema:
            type: string
          example: payment
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/monthly-summary-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: monthly summary report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: 2081/2082
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/monthly-sales-by-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: monthly sales by category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: 2081/2082
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/monthly-sales-by-floor:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: monthly sales by floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: 2081/2082
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/monthly-sales-by-type:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: monthly sales by type
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: 2081/2082
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/monthly-sales-by-credit:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: monthly sales by credit
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: 2081/2082
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/customer-credit-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer credit report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: date
          in: query
          schema:
            type: string
          example: '2025-01-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/customer-credit-data:
    post:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer credit data
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: date
          in: query
          schema:
            type: string
          example: '2024-12-23'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/credit-settlement-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: credit-settlement-report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-12-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customer-statements/{customer_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: customer statements
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: pagination
          in: query
          schema:
            type: integer
          example: '10'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-12-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-31'
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/report-total/{report_type}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: report-total
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-31'
        - name: date
          in: query
          schema:
            type: string
          example: '2024-07-30'
        - name: report_type
          in: path
          schema:
            type: string
          required: true
          description: credit_settlement_report|customer_credit_report|day_book_item_report
          example: day_book_item_report
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/report-excel/{report_type}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: report-excel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                application_id:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-12-31'
        - name: report_type
          in: path
          schema:
            type: string
          required: true
          description: credit_settlement_report|customer_credit_report|day_book_item_report
          example: day_book_item_report
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/day-book-item-report:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: day book item
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2025-01-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/favourite-menu-items:
    post:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: create favourite menu items
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: integer
                  example: '8'
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: get all favourite items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/favourite-menu-items/{id}:
    delete:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: delete favourite items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 01 Feb 2024 07:56:20 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  user_id: 10
                  product_variation_id: 6
                  created_at: '2024-02-01T06:56:36.000000Z'
                  updated_at: '2024-02-01T06:56:36.000000Z'
                message: Item removed successfully!
  /api/admin/orders:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: create order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                delivery_partner_id: '18'
                productDetails:
                  - is_free_menu_item: 'false'
                    note: null
                    product_id: 4357
                    price: 20
                    quantity: 1
                    topping_details: []
                  - is_free_menu_item: 'false'
                    note: null
                    product_id: 4358
                    price: 15
                    quantity: 1
                    topping_details: []
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: edit order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                productDetails:
                  - product_variation_id: 8
                    price: 100
                    quantity: 5
                  - product_variation_id: 6
                    price: 100
                    quantity: 5
                  - product_variation_id: 7
                    price: 150
                    quantity: 2
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: delete order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get all order list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/status/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: cancelled
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{table_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get single order data by table no
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/pickup-user/{pickup_user_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get single order by pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: pickup_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/pos/orders/all:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get all order for order table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
        - name: user_status
          in: query
          schema:
            type: string
          description: table
        - name: date
          in: query
          schema:
            type: string
          example: 11-07-2024
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/data/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get order data by order number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all/view:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: show all order by category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/change-order-table:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: Change order table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: '4'
                order_id:
                  type: integer
                  example: '11'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cancel-order:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: Cancel order
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: '21'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/orders/add-discount/{order_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: add discount to order
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                discount:
                  type: integer
                  example: '4'
                discount_type:
                  type: string
                  example: percent
                net_total:
                  type: integer
                  example: '4'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/floors:
    post:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: create floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: First Floor4
                description:
                  type: string
                  example: f1
                table_id[]:
                  type: string
                  example: T2
                floor_order_number:
                  type: integer
                  example: '12'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: get all floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/floors/{floor_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: update floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: Floor 45
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T5
                floor_order_number:
                  type: integer
                  example: '4'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: floor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: delete floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: floor_id
          in: path
          schema:
            type: integer
          required: true
          example: '67'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/pos/floors:
    get:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: get all floors with table for pos
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables:
    post:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: create table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table t2
                table_capacity:
                  type: integer
                  example: '3'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/tables:
    get:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: get all tables
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/{table_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: update table data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table T2
                table_capacity:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: delete table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/table/update/show-table-status:
    post:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: update show table status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: '1'
                show_table:
                  type: string
                  example: inactive
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/kot:
    get:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: get all kot list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: string
          example: pending
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:33:36 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 70
                    company_id: 1
                    table_number: T5
                    order_id: 96
                    kot_no: 202414YLUXB
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    kot_items: []
                  - id: 69
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    kot_no: 202414GW6QW
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    kot_items:
                      - id: 139
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 243
                        product_name: Chaumin
                        price: 100
                        current_quantity: 5
                        preparation_status: pending
                        note: ''
                        total: 500
                      - id: 140
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 245
                        product_name: Chaumin
                        price: 150
                        current_quantity: 5
                        preparation_status: pending
                        note: My Note
                        total: 750
                      - id: 143
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 245
                        product_name: Chaumin
                        price: 150
                        current_quantity: 15
                        preparation_status: pending
                        note: BOT Note
                        total: 2250
  /admin/kot/{id}:
    get:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: get single kot order items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:34:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 69
                  company_id: 1
                  table_number: T3
                  order_id: 98
                  kot_no: 202414GW6QW
                  preparation_status: pending
                  time: 05:09 pm
                  date: Jan 14, 2024
                  kot_items:
                    - id: 139
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 243
                      product_name: Chaumin
                      price: 100
                      current_quantity: 5
                      preparation_status: pending
                      note: ''
                      total: 500
                    - id: 140
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 245
                      product_name: Chaumin
                      price: 150
                      current_quantity: 5
                      preparation_status: pending
                      note: My Note
                      total: 750
                    - id: 143
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 245
                      product_name: Chaumin
                      price: 150
                      current_quantity: 15
                      preparation_status: pending
                      note: BOT Note
                      total: 2250
  /admin/kot-status/update:
    post:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: update kot items status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                kot_id: 70
                kot_items:
                  - item_id: 199
                  - item_id: 198
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cancel-kitchen-order-ticket/881:
    patch:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: cancel kicthen order ticket
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: _method
          in: header
          schema:
            type: string
          example: PUT
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/bot:
    get:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: get all bot list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:41:40 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 66
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    bot_no: 202414XK1MQ
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    bot_items:
                      - id: 48
                        company_id: 1
                        bar_order_ticket_id: 66
                        order_detail_id: 247
                        product_name: Fry Momo
                        price: 100
                        current_quantity: 35
                        preparation_status: pending
                        note: BOT Note
                        total: 3500
                        quantity_change:
                          - id: 10
                            company_id: 1
                            item_id: 48
                            old_quantity: '48'
                            new_quantity: '30'
                            created_at: '2024-01-14T13:58:08.000000Z'
                            updated_at: '2024-01-14T13:58:08.000000Z'
                  - id: 65
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    bot_no: 202414WRQKC
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    bot_items:
                      - id: 47
                        company_id: 1
                        bar_order_ticket_id: 65
                        order_detail_id: 244
                        product_name: Fry Momo
                        price: 100
                        current_quantity: 5
                        preparation_status: pending
                        note: My Note
                        total: 500
                        quantity_change: []
  /admin/bot/{id}:
    get:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: get single bar order ticket details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:42:26 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 66
                  company_id: 1
                  table_number: T3
                  order_id: 98
                  bot_no: 202414XK1MQ
                  preparation_status: pending
                  time: 05:09 pm
                  date: Jan 14, 2024
                  bot_items:
                    - id: 48
                      company_id: 1
                      bar_order_ticket_id: 66
                      order_detail_id: 247
                      product_name: Fry Momo
                      price: 100
                      current_quantity: 35
                      preparation_status: pending
                      note: BOT Note
                      total: 3500
                      quantity_change:
                        - id: 10
                          company_id: 1
                          item_id: 48
                          old_quantity: '48'
                          new_quantity: '30'
                          created_at: '2024-01-14T13:58:08.000000Z'
                          updated_at: '2024-01-14T13:58:08.000000Z'
  /admin/bot-status/update:
    post:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: update bar items status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bot_id: 65
                bot_items:
                  - item_id: 61
                  - item_id: 62
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cancel-bar-order-ticket/881:
    put:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: cancel bar order ticket
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/ask-bill/1:
    get:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: get ask bill data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ask-bills/order-number/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: get ask bill by order number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/tables/ask-bill/print:
    post:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: print ask bill
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: '21'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/ask-bill-log:
    post:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: store ask bill log
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: '1'
                discount_type:
                  type: string
                  example: rupees
                subtotal:
                  type: integer
                  example: '7787'
                discount_amount:
                  type: integer
                  example: '56'
                net_total:
                  type: integer
                  example: '6'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/kot-items/update:
    post:
      tags:
        - Admin > Restaurant > KOT Items
      summary: update kot items quantity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                orderDetails:
                  - id: 4
                    quantity: 5
                    note: my note
                    topping_details:
                      - topping_id: 9
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 170
                      - topping_id: 10
                        topping_product_id: 3
                        topping_quantity: 90
                        topping_price: 500
                  - id: 5
                    quantity: 100
                    note: my note
                    topping_details:
                      - topping_id: 23
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 600
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/bot-items/update:
    post:
      tags:
        - Admin > Restaurant > BOT Items
      summary: update bot items quantity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                orderDetails:
                  - id: 39
                    quantity: 10
                    topping_details:
                      - topping_id: 9
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 170
                      - topping_id: 10
                        topping_product_id: 3
                        topping_quantity: 90
                        topping_price: 500
                  - id: 37
                    quantity: 40
                    note: BOT Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: create delivery partner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner:
                  type: string
                  example: Pathao
                commission_percent:
                  type: integer
                  example: '5'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show all delivery partner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '22'
        - name: show_delivery_partner
          in: query
          schema:
            type: string
          example: active
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 22 Jan 2024 07:57:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    delivery_partner: Pathao
                    created_at: '2024-01-22T06:52:21.000000Z'
                    orders:
                      - id: 123
                        order_number: 202422EEQXJ
                        company_id: 1
                        user_id: 10
                        table_id: 5
                        customer_id: 1
                        pickup_user_id: 1
                        description: ab cd ef gh
                        status: pending
                        created_at: '2024-01-22T07:39:06.000000Z'
                        table_number: T5
  /api/admin/delivery-partner-banks:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: delivery partners bank list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '22'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 22 Jan 2024 07:57:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    delivery_partner: Pathao
                    created_at: '2024-01-22T06:52:21.000000Z'
                    orders:
                      - id: 123
                        order_number: 202422EEQXJ
                        company_id: 1
                        user_id: 10
                        table_id: 5
                        customer_id: 1
                        pickup_user_id: 1
                        description: ab cd ef gh
                        status: pending
                        created_at: '2024-01-22T07:39:06.000000Z'
                        table_number: T5
  /admin/delivery-partner/{id}:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update delivery partner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner:
                  type: string
                  example: bhojdeal
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show single delivery part data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner/2:
    delete:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: delete delivery partner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/update:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update order of delivery partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 123
                description: ab cd ef gh
                delivery_partner_id: 2
                productDetails:
                  - product_variation_id: 8
                    price: 100
                    quantity: 5
                  - product_variation_id: 6
                    price: 100
                    quantity: 5
                    note: My Note
                  - product_variation_id: 7
                    price: 150
                    quantity: 1
                    note: My Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/status/update/{order_id}:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update delivery user order status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/{order_id}:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show self delivery part order data by ordeer id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner-sales-data/4:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show delivery partner sales data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner/update/status:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update delivery partner status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner_id:
                  type: integer
                  example: '2'
                show_delivery_partner:
                  type: boolean
                  example: 'false'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partners-data/4:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show all delivery partner order and sales data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '4'
        - name: page
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/pos/delivery-partner:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: pos show all delivery partner
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery-user:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: create self delivery user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Ayush
                mobile_no:
                  type: integer
                  example: '9843455665'
                location:
                  type: string
                  example: KTM
                time:
                  type: string
                  example: 01:00 PM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 22 Jan 2024 11:28:01 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  full_name: Ayush
                  mobile_no: '9843455665'
                  location: KTM
                  time: 01:00 PM
                message: Delivery User Created Successfully!
    get:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: show all self delivery user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery-user/{id}:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: update self delivery user details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Drishya Poudel
                mobile_no:
                  type: integer
                  example: '9843455665'
                location:
                  type: string
                  example: KTM
                time:
                  type: string
                  example: 01:00 PM
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: delete self delivery user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: show self delivery user order detail by id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery/order/update:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: update order of self delivery user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 46
                description: ab cd ef gh
                self_delivery_user_id: 1
                productDetails:
                  - product_id: 1
                    price: 100
                    quantity: 5
                    topping_details:
                      - topping_product_id: 5
                        topping_quantity: 50
                        topping_price: 110
                      - topping_product_id: 7
                        topping_quantity: 50
                        topping_price: 110
                  - product_id: 6
                    price: 100
                    quantity: 5
                    note: My Note
                  - product_id: 7
                    price: 150
                    quantity: 1
                    note: My Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: create split bill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 20
                split_name: Split 1
                splitdetails:
                  - item_id: 8
                    product_name: Momo
                    price: 100
                    quantity: 5
                  - item_id: 8
                    product_name: Momo
                    price: 100
                    quantity: 4
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Split Bill
      summary: show all split bill
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 30 Jan 2024 09:01:06 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 4
                    company_id: 1
                    order_id: 2
                    split_name: Split 1
                    split_status: primary
                    payment_status: null
                    created_at: '2024-01-30T08:44:34.000000Z'
                    split_bill_details:
                      - id: 18
                        company_id: 1
                        split_bill_id: 4
                        item_id: '67'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:44:34.000000Z'
                        updated_at: '2024-01-30T08:44:34.000000Z'
                      - id: 19
                        company_id: 1
                        split_bill_id: 4
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:44:34.000000Z'
                        updated_at: '2024-01-30T08:44:34.000000Z'
                  - id: 3
                    company_id: 1
                    order_id: 1
                    split_name: ''
                    split_status: primary
                    payment_status: null
                    created_at: '2024-01-30T08:27:28.000000Z'
                    split_bill_details:
                      - id: 3
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:27:28.000000Z'
                        updated_at: '2024-01-30T08:27:28.000000Z'
                      - id: 4
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:27:28.000000Z'
                        updated_at: '2024-01-30T08:27:28.000000Z'
                      - id: 15
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:30:30.000000Z'
                        updated_at: '2024-01-30T08:30:30.000000Z'
                      - id: 16
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:30:30.000000Z'
                        updated_at: '2024-01-30T08:30:30.000000Z'
                      - id: 17
                        company_id: 1
                        split_bill_id: 3
                        item_id: '67'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:37:48.000000Z'
                        updated_at: '2024-01-30T08:37:48.000000Z'
  /admin/split-bill/update/data:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: update split bill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                splits:
                  - order_id: 2
                    split_name: Split 1
                    splitdetails:
                      - item_id: 69
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 2
                      - item_id: 8
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 5
                  - order_id: 2
                    split_name: Split 38
                    splitdetails:
                      - item_id: 689
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill/total-bill/show:
    get:
      tags:
        - Admin > Restaurant > Split Bill
      summary: show split total bill amount
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill-payment:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: store split bill payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 2
                split_id: 1
                payment_method_id: 1
                customer_id: 1
                subtotal: 344
                tax: 3
                discount: 3434
                discount_type: rupees
                net_total: 100
                paid: 50
                return: 344
                net_amount: 34434
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill/{id}:
    delete:
      tags:
        - Admin > Restaurant > Split Bill
      summary: delete split bill
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cash-in-out:
    post:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: store cash in/out
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                  example: '1'
                received:
                  type: integer
                  example: '454'
                paid:
                  type: integer
                  example: '454'
                remarks:
                  type: string
                  example: hy
                cash_in_out_item_id:
                  type: integer
                  example: '1'
                particular:
                  type: string
                  example: CUStOM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 08:25:18 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  particular: hh
                  amount: '454'
                  receive_paid: Received
                  remarks: hy
                  updated_at: '2024-02-22T08:25:18.000000Z'
                  created_at: '2024-02-22T08:25:18.000000Z'
                  id: 1
                message: Cash In/Out saved successfully!
  /admin/cash-in-out:
    get:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: get all cash in/out
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cash-in-out/{id}:
    post:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: update cash in/out
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                particular:
                  type: string
                  example: fg
                received:
                  type: integer
                  example: '55'
                paid:
                  type: integer
                  example: '55'
                remarks:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: delete cash in/out
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cash-in-out-items:
    post:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: store cash in/out items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: New
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: get all cash-in-out items
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/topping-items:
    post:
      tags:
        - Admin > Restaurant > Topping Items
      summary: store topping items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                variation_name: Momo
                price: 2
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/topping-items:
    get:
      tags:
        - Admin > Restaurant > Topping Items
      summary: get all toping items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/topping-items/{id}:
    post:
      tags:
        - Admin > Restaurant > Topping Items
      summary: update topping items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                variation_name: Momo
                price: 2
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/topping-items/{id}:
    delete:
      tags:
        - Admin > Restaurant > Topping Items
      summary: delete topping item
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/business-service-session-start:
    post:
      tags:
        - Admin > Restaurant > Manager Session
      summary: store business day on
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/business-service-session-start/5:
    post:
      tags:
        - Admin > Restaurant > Manager Session
      summary: make manager session end
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                note:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/business-service-session-check:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: check session
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cashier-today-session:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: get all cashier today session data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/cashier-today-sales:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: get cashier today sales data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/order-session-check:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: check order session
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/day-books:
    get:
      tags:
        - Admin > Restaurant > Day Book
      summary: get all day books
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: date
          in: query
          schema:
            type: string
          example: 03-25-2024
        - name: cashier
          in: query
          schema:
            type: string
          example: Hancie
        - name: employee
          in: query
          schema:
            type: string
          example: Rakesh
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: show all dashboard data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/business-session-check:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: check business session
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/sales-by-area:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: show sales by area
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: floor_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/peak-time-by-daily:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: show peak time by daily
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/last-30-days-top-selling-tables:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: last 30 days top selling table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/top-selling-item-by-week:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: top selling items by week
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: category_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/top-selling-item-by-month:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: top selling item by month
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: category_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard-primary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: dashboard primary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard-secondary:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: dashboard secondary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          description: saurav 22 | old 11 | bishow  5 -6 - 17
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner-payment:
    post:
      tags:
        - Admin > Restaurant > Delivery Partner Payment
      summary: store delivery partner payment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner_id:
                  type: integer
                  example: '4'
                paid_amount:
                  type: integer
                  example: '400'
                remarks:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/qr-payment:
    post:
      tags:
        - Admin > Restaurant > QR Payment Image
      summary: store qr payment image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                qr_payment_name:
                  type: string
                  example: eSewa
                qr_payment_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > QR Payment Image
      summary: show all qr payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/qr-payment/{id}:
    post:
      tags:
        - Admin > Restaurant > QR Payment Image
      summary: update qr payment image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                qr_payment_name:
                  type: string
                  example: Khalti
                qr_payment_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/qr-payment/id:
    delete:
      tags:
        - Admin > Restaurant > QR Payment Image
      summary: delete qr payment image
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/complementary-users:
    get:
      tags:
        - Admin > Restaurant > Complementary User
      summary: get complementary user list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/generate-fonepay-dynamic-qr:
    post:
      tags:
        - Admin > Restaurant > FonePay
      summary: Generate Dynamic FonePay Qr
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  example: '150'
                order_id:
                  type: integer
                  example: '53500'
                company_id:
                  type: integer
                  example: '1'
                subTotal:
                  type: integer
                  example: '150'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/check-qr-request-status:
    post:
      tags:
        - Admin > Restaurant > FonePay
      summary: Check QR Request Status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                prn:
                  type: string
                  example: ea6791f2-5104-476a-859d-6a045135e4f5
                order_id:
                  type: integer
                  example: '6777'
                subtotal:
                  type: integer
                  example: '656'
                net_total:
                  type: integer
                  example: '5656'
                paid:
                  type: integer
                  example: '656'
                company_id:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: string
          example: '{{branch_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/merchant/merchantDetailsForThirdParty/thirdPartyDynamicQrDownload:
    post:
      tags:
        - Admin > Restaurant > FonePay
      summary: >-
        https://merchantapi.fonepay.com/api/merchant/merchantDetailsForThirdParty/thirdPartyDynamicQrDownload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                amount: '10'
                remarks1: test1
                remarks2: test2
                prn: '1111111115'
                merchantCode: '1908230072'
                dataValidation: >-
                  88271767a508c8357908f1560c1dbf393248123fbf0bb8a021c4767d061e5edd58897266ab9a6b782fb71365f90918fef5e014adb6cbef9236b335ab786ec3ff
                username: 9851193791@fonepay.com.np
                password: Kimchi@2066
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/merchant/merchantDetailsForThirdParty/thirdPartyDynamicQrGetStatus:
    post:
      tags:
        - Admin > Restaurant > FonePay
      summary: >-
        https://merchantapi.fonepay.com/api/merchant/merchantDetailsForThirdParty/thirdPartyDynamicQrGetStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                amount: '10'
                remarks1: test1
                remarks2: test2
                prn: '9999'
                merchantCode: '1908230072'
                dataValidation: >-
                  88271767a508c8357908f1560c1dbf393248123fbf0bb8a021c4767d061e5edd58897266ab9a6b782fb71365f90918fef5e014adb6cbef9236b335ab786ec3ff
                username: 9851193791@fonepay.com.np
                password: Kimchi@2066
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/tables/{table-id}/hotel-dispatch:
    patch:
      tags:
        - Admin > Restaurant > Hotel
      summary: Dispatch hotel order
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: table-id
          in: path
          schema:
            type: integer
          required: true
          example: '1135'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/printers:
    post:
      tags:
        - Admin > Printers
      summary: store printer data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 1
                printer_name: aa
                paper_width: aa
                ip_address: aa
                printer_types:
                  - printer_type: BOT
                  - printer_type: KOT
                  - printer_type: Counter
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/printers:
    get:
      tags:
        - Admin > Printers
      summary: show single company printer data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/printers/{id}:
    delete:
      tags:
        - Admin > Printers
      summary: Delete printer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/printers/3:
    post:
      tags:
        - Admin > Printers
      summary: edit printer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                printer_name: aa
                paper_width: aa
                ip_address: aa
                printer_types:
                  - printer_type: BOT
                  - printer_type: KOT
                  - printer_type: Counter
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments:
    post:
      tags:
        - Admin > Human Resource > department
      summary: create department
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Cash
                description:
                  type: string
                  example: ghghg
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 25 Dec 2023 10:00:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  title: Cash
                  description: null
                  slug: cash
                  updated_at: '2023-12-25T10:00:55.000000Z'
                  created_at: '2023-12-25T10:00:55.000000Z'
                  id: 2
                message: Department created successfully!
    get:
      tags:
        - Admin > Human Resource > department
      summary: get all department list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments/{department id}:
    delete:
      tags:
        - Admin > Human Resource > department
      summary: delete department
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments/{department_id}:
    post:
      tags:
        - Admin > Human Resource > department
      summary: update department
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: My Title
                description:
                  type: string
                  example: My Description
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: department_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/positions:
    post:
      tags:
        - Admin > Human Resource > positions
      summary: create positions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Position
                description:
                  type: string
                  example: Description
                is_housekeeping:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Human Resource > positions
      summary: get all position
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 06:27:22 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    title: Position
                    slug: position
                    description: Description
                    status: active
                    is_housekeeping: 1
                    created_at: '2023-12-25T11:24:16.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/positions?page=1
                  last: http://127.0.0.1:8000/admin/positions?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/positions?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/positions
                  per_page: 5
                  to: 1
                  total: 1
  /admin/positions/{position_id}:
    post:
      tags:
        - Admin > Human Resource > positions
      summary: update position details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Position
                description:
                  type: string
                  example: Description
                is_housekeeping:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: position_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 06:28:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  title: Position
                  slug: position
                  description: Description
                  status: active
                  is_housekeeping: '1'
                  created_at: '2023-12-25T11:24:16.000000Z'
                  updated_at: '2023-12-25T11:24:16.000000Z'
                message: Position data updated successfully!
    delete:
      tags:
        - Admin > Human Resource > positions
      summary: delete position
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: position_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employees:
    post:
      tags:
        - Admin > Human Resource > employees
      summary: create employees
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                position_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: employee name
                short_name:
                  type: string
                  example: em
                description:
                  type: string
                  example: employee description
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:17:25 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  position_id: '1'
                  name: employee name
                  short_name: em
                  description: employee description
                  slug: employee-name
                  updated_at: '2023-12-26T07:17:25.000000Z'
                  created_at: '2023-12-26T07:17:25.000000Z'
                  id: 1
                message: Employee created successfully!
  /admin/employees:
    get:
      tags:
        - Admin > Human Resource > employees
      summary: get all employees list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:18:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    position_id: 1
                    name: employee name
                    short_name: em
                    slug: employee-name
                    description: employee description
                    status: active
                    created_at: '2023-12-26T07:17:25.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/employees?page=1
                  last: http://127.0.0.1:8000/admin/employees?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/employees?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/employees
                  per_page: 5
                  to: 1
                  total: 1
  /admin/employees/{id}:
    delete:
      tags:
        - Admin > Human Resource > employees
      summary: delete employee
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Human Resource > employees
      summary: update employee
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                position_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: employee name
                short_name:
                  type: string
                  example: emp
                description:
                  type: string
                  example: employee description
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:31:41 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  position_id: '1'
                  name: employee name
                  short_name: emp
                  slug: employee-name
                  description: employee description
                  status: active
                  created_at: '2023-12-26T07:17:25.000000Z'
                  updated_at: '2023-12-26T07:31:41.000000Z'
                message: Employee record updated successfully!
  /api/admin/employees/{id}:
    get:
      tags:
        - Admin > Human Resource > employees
      summary: show single employee details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employees/daybook-data/{employee_id}:
    get:
      tags:
        - Admin > Human Resource > employees
      summary: show employee day book data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
        - name: employee_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roster-time:
    post:
      tags:
        - Admin > Duty Roster > roster time
      summary: create roster time
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 12:00 AM
                type:
                  type: string
                  example: hotel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:30:31 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  title: 05:00 AM
                  type: hotel
                  updated_at: '2023-12-26T09:30:31.000000Z'
                  created_at: '2023-12-26T09:30:31.000000Z'
                  id: 1
                message: Roster time created successfully!
    get:
      tags:
        - Admin > Duty Roster > roster time
      summary: show all roster time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: type
          in: query
          schema:
            type: string
          example: hotel
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:07:48 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    company_id: 1
                    title: 08:00 PM
                    status: active
                    created_at: '2023-12-26T02:45:32.000000Z'
                  - id: 1
                    company_id: 1
                    title: 05:00 PM
                    status: active
                    created_at: '2023-12-26T02:44:55.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/roster_time?page=1
                  last: http://127.0.0.1:8000/admin/roster_time?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/roster_time?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/roster_time
                  per_page: 5
                  to: 2
                  total: 2
  /admin/roster-time/{id}:
    post:
      tags:
        - Admin > Duty Roster > roster time
      summary: update roster time
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 08:00 PM
                type:
                  type: string
                  example: restaurant
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:01:11 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data: true
                message: Roster time created successfully!
    delete:
      tags:
        - Admin > Duty Roster > roster time
      summary: delete roster time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roster-task:
    post:
      tags:
        - Admin > Duty Roster > roster task
      summary: create roaster task
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: washing
                type:
                  type: string
                  example: restaurant
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Duty Roster > roster task
      summary: show all roster task
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: type
          in: query
          schema:
            type: string
          example: hotel
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roster-task/{id}:
    post:
      tags:
        - Admin > Duty Roster > roster task
      summary: update roster task
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: washing1
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 27 Dec 2023 06:26:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '56'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: washing1
                  slug: washing1
                  type: restaurant
                  status: active
                  created_at: '2023-12-26T11:37:16.000000Z'
                  updated_at: '2023-12-27T06:26:50.000000Z'
                message: Roster Task Updated Successfully!
  /admin/roster-task/2:
    delete:
      tags:
        - Admin > Duty Roster > roster task
      summary: delete roster task
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 27 Dec 2023 06:29:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: washing1
                  slug: washing1
                  type: restaurant
                  status: active
                  created_at: '2023-12-26T11:37:16.000000Z'
                  updated_at: '2023-12-27T06:26:50.000000Z'
                message: Roster Task Deleted Successfully!
  /api/admin/restaurant-roster:
    post:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: create restaurant roster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                floor_plan_id: 2
                floor_type: hotel
                date: '2023-08-23'
                roster_task_time_employee:
                  - roster_task_id: 1
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 1
                  - roster_task_id: 2
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/restaurant-floor-plan:
    get:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: get all roster list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: date
          in: query
          schema:
            type: string
          example: '2023-08-23'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 01 Jan 2024 08:02:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - floor_plan:
                      id: 4
                      company_id: 1
                      floor_name: Floor 4
                      description: f1
                      created_at: '2023-12-18T05:55:11.000000Z'
                      updated_at: '2023-12-18T06:05:20.000000Z'
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '2'
                            employee: null
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee: null
                  - floor_plan: null
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 2
                              company_id: 1
                              position_id: 1
                              name: Shyam
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                  - floor_plan: null
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 2
                              company_id: 1
                              position_id: 1
                              name: Shyam
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
  /api/admin/restaurant-roster/update:
    post:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: update restaurant roster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PATCH
                floor_id: 2
                date: '2023-08-23'
                roster_task_time_employee:
                  - roster_task_id: 1
                    roster_time_employee:
                      - roster_time_id: 2
                        employee_id: 122
                      - roster_time_id: 2
                        employee_id: 1
                  - roster_task_id: 2
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 200
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hotel-floors:
    post:
      tags:
        - Admin > Hotel > hotel floor -old
      summary: create hotel floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                description:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:42:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  title: hy
                  company_id: 1
                  description: hy
                  slug: hy
                  updated_at: '2023-12-28T11:42:55.000000Z'
                  created_at: '2023-12-28T11:42:55.000000Z'
                  id: 1
                message: Floor created successfully!
    get:
      tags:
        - Admin > Hotel > hotel floor -old
      summary: get all hotel floor list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:47:45 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    title: hy
                    slug: hy
                    description: hy
                    status: active
                    created_at: '2023-12-28T11:42:55.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/hotel-floors?page=1
                  last: http://127.0.0.1:8000/admin/hotel-floors?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/hotel-floors?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/hotel-floors
                  per_page: 5
                  to: 1
                  total: 1
  /admin/hotel-floors/{id}:
    post:
      tags:
        - Admin > Hotel > hotel floor -old
      summary: update hotel floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                description:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:54:03 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: hy
                  slug: hy
                  description: fgfg
                  status: active
                  created_at: '2023-12-28T11:53:49.000000Z'
                  updated_at: '2023-12-28T11:54:03.000000Z'
                message: Floor updated successfully!
    delete:
      tags:
        - Admin > Hotel > hotel floor -old
      summary: delete hotel floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:56:02 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: hy
                  slug: hy
                  description: fgfg
                  status: active
                  created_at: '2023-12-28T11:53:49.000000Z'
                  updated_at: '2023-12-28T11:54:03.000000Z'
                message: Floor deleted successfully!
  /api/admin/hotels/floor-plans:
    post:
      tags:
        - Admin > Hotel > Floor Plan
      summary: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Floor 1
                description:
                  type: string
                  example: 1st floor of building a
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > Floor Plan
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/floor-plans/{id}:
    get:
      tags:
        - Admin > Hotel > Floor Plan
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '26'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > Floor Plan
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Floor 1
                description:
                  type: string
                  example: base floor of building a
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > Floor Plan
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/floor-plans/rooms:
    post:
      tags:
        - Admin > Hotel > Floor Plan
      summary: create with multiple rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 2
                title: new Floor 2
                rooms:
                  - id: 7
                    name: '2011'
                  - id: 8
                    name: '2021'
                  - id: 9
                    name: '2031'
                    delete: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/rooms/{id}/maintenances:
    post:
      tags:
        - Admin > Hotel > rooms > maintenances
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                from: '2025-06-15'
                to: '2025-06-15'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > rooms > maintenances
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/rooms/{id}:
    post:
      tags:
        - Admin > Hotel > rooms
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                name:
                  type: string
                  example: new name
                condition:
                  type: string
                  example: CLEAN
                is_active:
                  type: integer
                  description: 1/0
                  example: '1'
                hotel_floor_plan_id:
                  type: integer
                  example: '26'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > rooms
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '14'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/rooms:
    get:
      tags:
        - Admin > Hotel > rooms
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: is_active
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/rooms/available:
    get:
      tags:
        - Admin > Hotel > rooms
      summary: get all available rooms
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/rooms/sync-tables:
    post:
      tags:
        - Admin > Hotel > rooms
      summary: sync tables
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/amenities:
    get:
      tags:
        - Admin > Hotel > amenities
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > amenities
      summary: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Air Conditioning
                description:
                  type: string
                  example: Air conditioning service of top brand
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/amenities/{id}:
    post:
      tags:
        - Admin > Hotel > amenities
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Air Conditioning 1
                description:
                  type: string
                  example: Air conditioning service of top brand 1
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > amenities
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/{room-type-id}/discounts:
    get:
      tags:
        - Admin > Hotel > room type > room type discount
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > room type > room type discount
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Dashain discount
                type:
                  type: string
                  description: PERCENTAGE/FIXED
                  example: FIXED
                amount:
                  type: integer
                  example: '100'
                valid_from:
                  type: string
                  example: '2020-02-02 02:02:02'
                valid_to:
                  type: string
                  example: '2020-02-02 02:02:02'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/{room-type-id}/discounts/{discount-id}:
    get:
      tags:
        - Admin > Hotel > room type > room type discount
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
        - name: discount-id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > room type > room type discount
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Dashain discount 1
                type:
                  type: string
                  description: PERCENTAGE/FIXED
                  example: FIXED
                amount:
                  type: integer
                  example: '100'
                valid_from:
                  type: string
                  example: '2020-02-02 02:02:02'
                valid_to:
                  type: string
                  example: '2020-02-02 02:02:02'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
        - name: discount-id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > room type > room type discount
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
        - name: discount-id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/{room-type-id}/rooms:
    post:
      tags:
        - Admin > Hotel > room type > room type breakdown
      summary: save
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hotel_room_ids[0]:
                  type: integer
                  example: '7'
                hotel_room_ids[1]:
                  type: integer
                  example: '8'
                hotel_room_ids[2]:
                  type: integer
                  example: '9'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: room-type-id
          in: path
          schema:
            type: integer
          required: true
          example: '30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/{id}/media:
    post:
      tags:
        - Admin > Hotel > room type > media
      summary: save media
      description: |-
        **Logic**

        parameters for creation

        - file: File
            
        - collectionName: string
            
        - order: integer
            

        parameter to update(order):

        - id: integer
            
        - collectionName: string
            
        - order: integer
            

        parameter to delete:

        - id: integerr
            
        - collectionName: string (any)
            
        - order: integer (any)
            
        - delete: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media[0][id]:
                  type: integer
                  example: '104'
                media[0][file]:
                  type: string
                  format: binary
                media[0][collectionName]:
                  type: string
                  description: gallery/featured
                  example: featured
                media[0][order]:
                  type: integer
                  example: '1'
                media[1][id]:
                  type: integer
                  example: '92'
                media[1][collectionName]:
                  type: string
                  example: gallery
                media[1][file]:
                  type: string
                  format: binary
                media[1][order]:
                  type: integer
                  example: '1'
                media[2][file]:
                  type: string
                  format: binary
                media[2][id]:
                  type: integer
                  example: '95'
                media[2][delete]:
                  type: integer
                  example: '1'
                media[2][collectionName]:
                  type: string
                  example: gallerysdd
                media[2][order]:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > room type > media
      summary: get media
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types:
    post:
      tags:
        - Admin > Hotel > room type
      summary: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Delux double room
                base_price:
                  type: integer
                  example: '100000'
                max_number_of_guests:
                  type: integer
                  example: '10'
                number_of_adults:
                  type: integer
                  example: '8'
                number_of_children:
                  type: integer
                  example: '2'
                advance_type:
                  type: string
                  description: FIXED/PERCENTAGE
                  example: FIXED
                advance_amount:
                  type: integer
                  example: '100'
                description:
                  type: string
                  example: some description
                amenities[0]:
                  type: integer
                  example: '1'
                amenities[1]:
                  type: integer
                  example: '2'
                amenities[2]:
                  type: integer
                  example: '3'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > room type
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/{id}:
    post:
      tags:
        - Admin > Hotel > room type
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Delux double room 1
                base_price:
                  type: integer
                  example: '10000'
                max_number_of_guests:
                  type: integer
                  example: '100'
                number_of_adults:
                  type: integer
                  example: '80'
                number_of_children:
                  type: integer
                  example: '2'
                advance_type:
                  type: string
                  description: FIXED/PERCENTAGE
                  example: PERCENTAGE
                advance_amount:
                  type: integer
                  example: '100'
                description:
                  type: string
                  example: some description
                amenities[0]:
                  type: integer
                  example: '4'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > room type
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > room type
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/available:
    get:
      tags:
        - Admin > Hotel > room type
      summary: get available room types
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          example: '2025-08-02 02:00:00'
        - name: to
          in: query
          schema:
            type: string
          example: '2025-08-03 10:00:00'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/room-types/available-rooms:
    get:
      tags:
        - Admin > Hotel > room type
      summary: get list of available rooms with room types
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: from
          in: query
          schema:
            type: string
          example: '2025-06-13 00:00:00'
        - name: to
          in: query
          schema:
            type: string
          example: '2025-06-13 00:00:00'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservation-sources:
    post:
      tags:
        - Admin > Hotel > reservation source
      summary: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: phone
                description:
                  type: string
                  example: All the reservations that are registered with phone
                is_active:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > reservation source
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '2'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservation-sources/{id}:
    post:
      tags:
        - Admin > Hotel > reservation source
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: phones
                description:
                  type: string
                  example: All the reservations that are registered with phones
                _method:
                  type: string
                  example: put
                is_active:
                  type: integer
                  example: '0'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > reservation source
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > reservation source
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/detail:
    post:
      tags:
        - Admin > Hotel > reservation > reservation detail
      summary: save
      description: |-
        Create/Update/Delete room types related to hotel reservation

        **Required parameters for each operation**

        1. Create
            
            1. hotel_room_type_id: integer
                
            2. quantity: integer
                
            3. rate: numeric
                
        2. Update
            
            1. id: integer
                
            2. hotel_room_type_id: integer
                
            3. quantity: integer
                
            4. rate: numeric
                
        3. Delete
            
            1. id: integer
                
            2. hotel_room_type_id: integer
                
            3. quantity: integer
                
            4. rate: numeric
                
            5. delete: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reservation_detail:
                  - id: 174
                    hotel_room_type_id: 2
                    quantity: 2
                    rate: 1000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '57'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > reservation > reservation detail
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '36'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{reservation-id}/detail/{reservation-detail-id}/rooms:
    post:
      tags:
        - Admin > Hotel > reservation > reservation detail
      summary: set rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reservation_rooms:
                  - hotel_room_id: 5
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: reservation-id
          in: path
          schema:
            type: integer
          required: true
          example: '73'
        - name: reservation-detail-id
          in: path
          schema:
            type: integer
          required: true
          example: '199'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{reservation-id}/detail/{reservation-detail-id}/rooms/{reservation-room-id}/transfer:
    post:
      tags:
        - Admin > Hotel > reservation > reservation detail
      summary: transfer room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_hotel_room_id: 8
                rate: 1000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: reservation-id
          in: path
          schema:
            type: integer
          required: true
          example: '34'
        - name: reservation-detail-id
          in: path
          schema:
            type: integer
          required: true
          example: '35'
        - name: reservation-room-id
          in: path
          schema:
            type: integer
          required: true
          example: '28'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{reservation-id}/detail/{reservation-detail-id}/rooms/{reservation-room-id}/extend:
    post:
      tags:
        - Admin > Hotel > reservation > reservation detail
      summary: extend room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                to: '2025-06-20'
                rate: 500
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: reservation-id
          in: path
          schema:
            type: integer
          required: true
          example: '34'
        - name: reservation-detail-id
          in: path
          schema:
            type: integer
          required: true
          example: '49'
        - name: reservation-room-id
          in: path
          schema:
            type: integer
          required: true
          example: '42'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/products:
    post:
      tags:
        - Admin > Hotel > reservation > reservation product
      summary: save
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reservation_products:
                  - inventory_product_id: 388
                    quantity: 5
                    rate: 800
                  - inventory_product_id: 386
                    quantity: 5
                    rate: 100
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/guests:
    get:
      tags:
        - Admin > Hotel > reservation > reservation guests
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > reservation > reservation guests
      summary: save
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                reservation_guests[0][id]:
                  type: integer
                  example: '118'
                reservation_guests[0][hotel_guest][name]:
                  type: string
                  example: Alan Walker 1
                reservation_guests[0][hotel_guest][document][type]:
                  type: string
                  example: ID_CARD
                reservation_guests[0][hotel_guest][document][document_number]:
                  type: integer
                  example: '123456'
                reservation_guests[0][hotel_guest][document][document_issuing_country]:
                  type: string
                  example: NEPAL
                reservation_guests[0][hotel_guest][document][file]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations:
    post:
      tags:
        - Admin > Hotel > reservation
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reserved_by:
                  name: Newest
                  phone: '98490000002'
                  email: some@email.com
                reservation:
                  start_date: '2025-09-03 02:00:00'
                  end_date: '2025-09-04 10:00:00'
                  hotel_reservation_source_id: 2
                  advance_amount: 500
                  advance_payment_option_id: 1
                  exclude_advance: true
                  business_session_id: 1
                reservation_detail:
                  - hotel_room_type_id: 1
                    quantity: 1
                    rate: 5000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > reservation
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}:
    get:
      tags:
        - Admin > Hotel > reservation
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/check-in:
    post:
      tags:
        - Admin > Hotel > reservation
      summary: check in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reservation_detail:
                  - hotel_room_type_id: 2
                    quantity: 1
                    rate: 5000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/check-out:
    post:
      tags:
        - Admin > Hotel > reservation
      summary: check out
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/pay:
    post:
      tags:
        - Admin > Hotel > reservation
      summary: pay
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                paid_amount: 6000
                is_complimentary_payment: false
                fragments:
                  - company_payment_option_id: 1
                    received_amount: 5000
                  - company_payment_option_id: 2
                    received_amount: 1000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/available-rooms:
    get:
      tags:
        - Admin > Hotel > reservation
      summary: get available rooms
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/summary:
    get:
      tags:
        - Admin > Hotel > reservation
      summary: get summary
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/reservations/{id}/extend:
    post:
      tags:
        - Admin > Hotel > reservation
      summary: extend reservation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                from: '2025-06-13'
                to: '2025-06-14'
                new_hotel_room_id: 4
                rate: 500
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '34'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/inventory-products:
    get:
      tags:
        - Admin > Hotel > products
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/employee/assignments/{id}:
    post:
      tags:
        - Admin > Hotel > employee > assignments > check list
      summary: save
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                assignment_check_lists:
                  - cleaning_check_list_id: 2
                  - cleaning_check_list_id: 3
                  - cleaning_check_list_id: 4
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > employee > assignments
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/employee/assignments:
    post:
      tags:
        - Admin > Hotel > employee > assignments
      summary: save
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                assignments:
                  - employee_id: 1
                    hotel_room_id: 6
                  - employee_id: 1
                    hotel_room_id: 7
                  - employee_id: 1
                    hotel_room_id: 8
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > employee > assignments
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: from
          in: query
          schema:
            type: string
          example: '2020-02-03 00:00:00'
        - name: to
          in: query
          schema:
            type: string
          example: '2020-02-05 23:59:59'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/employee:
    get:
      tags:
        - Admin > Hotel > employee
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Hotel > employee
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Some name
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/employee/{id}:
    put:
      tags:
        - Admin > Hotel > employee
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Some name
                status: active
                description: some description
                short_name: SN
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > employee
      summary: get
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > employee
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/cleaning-check-lists:
    post:
      tags:
        - Admin > Hotel > cleaning check list
      summary: create
      description: |-
        Supported types

        - HOUSEKEEPING
            
        - LAUNDRY
            

        Supported status

        - active
            
        - inactive
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: task 1
                type:
                  type: string
                  example: HOUSEKEEPING
                status:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > cleaning check list
      summary: get all
      description: |-
        Supported types

        - HOUSEKEEPING
            
        - LAUNDRY
            

        Supported status

        - active
            
        - inactive
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/cleaning-check-lists/{id}:
    put:
      tags:
        - Admin > Hotel > cleaning check list
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Task random
                type: LAUNDRY
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Hotel > cleaning check list
      summary: get
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Hotel > cleaning check list
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/hotels/countries:
    get:
      tags:
        - Admin > Hotel
      summary: get countries
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/unit-measurements:
    post:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: store unit of measurement
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unit_name:
                  type: string
                  example: kg
                code:
                  type: integer
                  example: '3433'
                factor:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:07:15 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  unit_name: ml
                  code: '3433'
                  factor: '2'
                  updated_at: '2024-02-27T07:07:15.000000Z'
                  created_at: '2024-02-27T07:07:15.000000Z'
                  id: 1
                message: Unit Measurement Created Successfully!
    get:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: get all unit of measurements
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: ml
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:07:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '56'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    unit_name: ml
                    code: '3433'
                    factor: '2'
  /admin/unit-measurements/{id}:
    post:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: update unit of measurement
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unit_name:
                  type: string
                  example: ml
                code:
                  type: string
                  example: eer
                factor:
                  type: integer
                  example: '454353'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:15:34 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  unit_name: unit
                  code: eer
                  factor: '454353'
                  created_at: '2024-02-27T07:07:15.000000Z'
                  updated_at: '2024-02-27T07:15:34.000000Z'
                message: Unit Updated Successfully!
    delete:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: delete unit of measurement
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: store inventory products
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: Momo
                sku:
                  type: integer
                  example: '453534'
                measurement_unit_id:
                  type: integer
                  example: '1'
                volume:
                  type: integer
                  example: '5'
                volume_unit_id:
                  type: integer
                  example: '5'
                minimum_stock_level:
                  type: integer
                  example: '5'
                enable_custom_yield:
                  type: integer
                  example: '1'
                custom_yield_percent:
                  type: integer
                  example: '50'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:53:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  product_name: Momo
                  sku: '453534'
                  unit: '44'
                  updated_at: '2024-02-27T07:53:51.000000Z'
                  created_at: '2024-02-27T07:53:51.000000Z'
                  id: 2
                message: Unit Measurement Created Successfully!
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: get all inventory product list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/141:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: update inventory product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: hgj
                sku:
                  type: integer
                  example: '43545'
                measurement_unit_id:
                  type: integer
                  example: '3'
                custom_yield_percent:
                  type: integer
                  example: '60'
                enable_custom_yield:
                  type: integer
                  example: '1'
                volume_unit_id:
                  type: integer
                  example: '5'
                volume:
                  type: integer
                  example: '60'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/inventory-products/{id}:
    delete:
      tags:
        - Admin > Inventory > Inventory Products
      summary: delete inventory product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/1:
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: show single inventory product data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/show-inventory-adjustment-details/1:
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: show inventory product adjustment details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products-consumption/1:
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: show product inventory consumption
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products-consumption/93:
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: inventory products in and out
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-adjustments:
    post:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: store inventory adjustment data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2023-05-23'
                reason: Breakage
                description: aa aa
                products:
                  - product_id: 1
                    quantity_on_hand: 23
                    adjusted_quantity: 2
                    adjust_quantity: 4
                    adjust_volume_unit_quantity: 4
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/inventory-adjustments:
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: get all inventory adjustment data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 28 Feb 2024 10:54:21 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 12
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 12
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 12
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 4
                        created_at: '2024-02-28T10:44:49.000000Z'
                        updated_at: '2024-02-28T10:44:49.000000Z'
                  - id: 11
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 11
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 11
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: -3
                        created_at: '2024-02-28T10:44:38.000000Z'
                        updated_at: '2024-02-28T10:44:38.000000Z'
                  - id: 10
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 10
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 10
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: -3
                        created_at: '2024-02-28T10:43:54.000000Z'
                        updated_at: '2024-02-28T10:43:54.000000Z'
                  - id: 9
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 9
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 9
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 3
                        created_at: '2024-02-28T10:43:01.000000Z'
                        updated_at: '2024-02-28T10:43:01.000000Z'
                  - id: 8
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 8
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 8
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 3
                        created_at: '2024-02-28T10:30:00.000000Z'
                        updated_at: '2024-02-28T10:30:00.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/inventory-adjustments?page=1
                  last: http://127.0.0.1:8000/admin/inventory-adjustments?page=3
                  prev: null
                  next: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                meta:
                  current_page: 1
                  from: 1
                  last_page: 3
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=1
                      label: '1'
                      active: true
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                      label: '2'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=3
                      label: '3'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/inventory-adjustments
                  per_page: 5
                  to: 5
                  total: 11
  /api/admin/inventory-adjustments/{id}:
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: show single inventory data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-adjustment-reasons:
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: inventroy adjustment reasons
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-audit:
    post:
      tags:
        - Admin > Inventory > Inventory Audit
      summary: store inventory audit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inventory_audit_data:
                  - inventory_product_id: 2
                    quantity_on_hand: 100
                    adjust_quantity: null
                    adjust_volume_unit_quantity: null
                    variance: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Audit
      summary: show all inventory audit list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-audit-batch-lock:
    post:
      tags:
        - Admin > Inventory > Inventory Audit
      summary: lock inventory audit batch
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inventory_batch_id:
                  type: integer
                  example: '1'
                lock_status:
                  type: string
                  example: lock
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-audit/{id}:
    delete:
      tags:
        - Admin > Inventory > Inventory Audit
      summary: delete inventory audit batch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/storage-area:
    post:
      tags:
        - Admin > Inventory > Storage Area
      summary: store storage area
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_area_name:
                  type: string
                  example: First Floor4
                inventory_product_id[]:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Storage Area
      summary: show all stoarge area
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users:
    post:
      tags:
        - Admin > user
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bishal Gurung
                email:
                  type: string
                  example: grgbishal360@gmail.com
                company_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > user
      summary: get all users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Hancie
        - name: role
          in: query
          schema:
            type: string
          example: Waiter
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users/{user_id}:
    post:
      tags:
        - Admin > user
      summary: update user data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > user
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > user
      summary: show single user data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users/change-password:
    post:
      tags:
        - Admin > user
      summary: change user password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: integer
                  example: '12656566'
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/current-branch-users:
    get:
      tags:
        - Admin > user
      summary: show current branch users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roles:
    post:
      tags:
        - Admin > roles OLD
      summary: create roles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                role_name:
                  type: string
                  example: cashier
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > roles OLD
      summary: get all roles
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > roles OLD
      summary: remove role
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company-details:
    get:
      tags:
        - Admin > Company OLD
      summary: get company details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 03 Jan 2024 10:30:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  business_name: Akriti Hotel
                  slug: business
                  display_name: B
                  address: KTM
                  primary_email: admin@gmail.com
                  primary_phone: '984334645'
                  vat_number: '454545'
                  registration_number: '54545'
                  start_date: '454545'
                  company_image: >-
                    http://localhost:8000/storage/1/BDD0688FF02068E5C427B0954F8A2297.webp
                  user_id: 1
  /api/admin/permission:
    get:
      tags:
        - Admin > Permission
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: show_in
          in: query
          schema:
            type: string
          description: superadmin_panel|admin_panel
          example: admin_panel
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/permission/{id}:
    get:
      tags:
        - Admin > Permission
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role:
    post:
      tags:
        - Admin > Role
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: superwaiter10
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Role
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          description: 1||0
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          description: '||name'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role/{id}:
    post:
      tags:
        - Admin > Role
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: superadmin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Role
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role/{id}/assign-permission:
    post:
      tags:
        - Admin > Role
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}/payment-option:
    get:
      tags:
        - Admin > Company > Company Payment Option
      summary: company payment option list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: status
          in: query
          schema:
            type: string
          description: active|inactive
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Company > Company Payment Option
      summary: company payment option create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payment_option_id: 1
                secret_key: asdf
                public_key: asd
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}/payment-option/{payment_option_id}:
    get:
      tags:
        - Admin > Company > Company Payment Option
      summary: company payment option show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: payment_option_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}/payment-option/update:
    post:
      tags:
        - Admin > Company > Company Payment Option
      summary: company payment option update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                payment_option_id: 1
                secret_key: asdf0
                public_key: asd0
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}/payment-option/update-status:
    post:
      tags:
        - Admin > Company > Company Payment Option
      summary: company payment option update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                payment_option_id: 1
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}:
    post:
      tags:
        - Admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                business_name:
                  type: string
                  example: Company 1 Ltd
                display_name:
                  type: string
                  example: Company 1
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: company1@company.com
                primary_phone:
                  type: integer
                  example: '984334645'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: string
                  example: '2020-10-10'
                bill_heading:
                  type: string
                  example: sfg
                bill_remarks:
                  type: string
                  example: fgdhg
                is_tax:
                  type: string
                  example: active
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Company
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Company
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user:
    get:
      tags:
        - Admin > Company
      summary: company users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/assign-update-user:
    post:
      tags:
        - Admin > Company
      summary: assign or update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: thirstytorvalds@freethecookies.com
                roles:
                  - manager
                branch_ids:
                  - 1
                is_resend: null
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user/invitations:
    get:
      tags:
        - Admin > Company
      summary: list company user invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user/invitation/{user_temporary_data_id}:
    delete:
      tags:
        - Admin > Company
      summary: delete user invitation
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: user_temporary_data_id
          in: path
          schema:
            type: integer
          required: true
          example: '23'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/unassign-user:
    post:
      tags:
        - Admin > Company
      summary: unassign user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 29
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user-data-update:
    post:
      tags:
        - Admin > Company
      summary: user data update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 10
                roles:
                  - admin
                branch_ids:
                  - 1
                  - 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch:
    post:
      tags:
        - Admin > Branch
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  example: '5'
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti02@gmail.com
                primary_phone:
                  type: integer
                  example: '980678204'
                contact_person_name:
                  type: string
                  example: A B
                contact_person_designation:
                  type: string
                  example: xyz
                contact_person_email:
                  type: string
                  example: a@b.com
                contact_person_phone:
                  type: integer
                  example: '9876543210'
                bill_heading:
                  type: string
                bill_remarks:
                  type: string
                is_tax:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Branch
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: query
          schema:
            type: integer
          example: '14'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/{id}:
    post:
      tags:
        - Admin > Branch
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti02@gmail.com
                primary_phone:
                  type: integer
                  example: '980678204'
                contact_person_name:
                  type: string
                  example: A B
                contact_person_designation:
                  type: string
                  example: xyz
                contact_person_email:
                  type: string
                  example: a@b.com
                contact_person_phone:
                  type: integer
                  example: '9876543210'
                bill_heading:
                  type: string
                bill_remarks:
                  type: string
                is_tax:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Branch
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Branch
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/{id}/update-status:
    post:
      tags:
        - Admin > Branch
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/hide-delivery:
    post:
      tags:
        - Admin > Branch
      summary: Hide Delivery
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                branch_id:
                  type: integer
                  example: '1'
                hide_delivery:
                  type: boolean
                  example: 'true'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/other-setting/:
    post:
      tags:
        - Admin > Branch
      summary: Other Setting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                hide_delivery: 0
                notify_table_transfer: 0
                pay_first: 0
                computer_printer_status: 1
                computer_printer_ip_address: 192.168.100.10
                branch_id: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-option:
    get:
      tags:
        - Admin > Payment Option
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: is_cash
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-option/{id}:
    get:
      tags:
        - Admin > Payment Option
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier:
    post:
      tags:
        - Admin > Supplier
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: A B 2
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                email:
                  type: string
                  example: a@b.com
                contact_number:
                  type: integer
                  example: '980678204'
                pan_vat_number:
                  type: integer
                  example: '122343'
                status:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier/{id}:
    post:
      tags:
        - Admin > Supplier
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                name:
                  type: string
                  example: A B
                email:
                  type: string
                  example: a@b.com
                contact_number:
                  type: integer
                  example: '980678204'
                pan_vat_number:
                  type: integer
                  example: '122343'
                status:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Supplier
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier/{id}/update-status:
    post:
      tags:
        - Admin > Supplier
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: inactive
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier/{id}/transaction:
    get:
      tags:
        - Admin > Supplier
      summary: supplier transaction
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-product:
    post:
      tags:
        - Admin > Supplier Product
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: A1B
                code_sku:
                  type: string
                  example: qw
                vat:
                  type: integer
                  description: in:null,0,13
                  example: '13'
                note:
                  type: string
                  example: '980678204 asdf asdf  dfsa fsdaf sdfsd '
                status:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier Product
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-product/{id}:
    post:
      tags:
        - Admin > Supplier Product
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: A B
                code_sku:
                  type: string
                  example: ab
                vat:
                  type: integer
                  example: '0'
                note:
                  type: string
                  example: '980678204 asdf asdf  dfsa fsdaf sdfsd '
                status:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Supplier Product
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier Product
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-product/{id}/update-status:
    post:
      tags:
        - Admin > Supplier Product
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: inactive
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase:
    post:
      tags:
        - Admin > Purchase
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: integer
                  example: '1'
                bill_date:
                  type: string
                  example: '2024-06-15'
                reference:
                  type: string
                  example: adsfasdf sdaf asdf a111111
                note:
                  type: string
                  example: adsfasdf sdaf asdf a
                discount:
                  type: integer
                  example: '10'
                status:
                  type: string
                  description: ', //draft,approved,void'
                  example: draft
                supplier_products[0][supplier_product_id]:
                  type: integer
                  example: '1'
                supplier_products[0][quantity]:
                  type: integer
                  example: '11'
                supplier_products[0][rate]:
                  type: integer
                  example: '100'
                supplier_products[0][vat]:
                  type: integer
                  example: '10'
                supplier_products[1][supplier_product_id]:
                  type: integer
                  example: '2'
                supplier_products[1][quantity]:
                  type: integer
                  example: '100'
                supplier_products[1][rate]:
                  type: integer
                  example: '12'
                supplier_products[1][vat]:
                  type: integer
                  example: '13'
                attachments[]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Purchase
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: '//draft,approved,void '
        - name: supplier_id
          in: query
          schema:
            type: string
        - name: bill_date
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase/{id}:
    post:
      tags:
        - Admin > Purchase
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PATCH
                supplier_id:
                  type: integer
                  example: '1'
                bill_date:
                  type: string
                  example: '2024-06-15'
                reference:
                  type: string
                  example: adsfasdf sdaf asdf a111111
                note:
                  type: string
                  example: adsfasdf sdaf asdf a
                discount:
                  type: integer
                  example: '1'
                status:
                  type: string
                  example: draft
                supplier_products[0][supplier_product_id]:
                  type: integer
                  example: '1'
                supplier_products[0][quantity]:
                  type: integer
                  example: '11'
                supplier_products[0][rate]:
                  type: integer
                  example: '100'
                supplier_products[0][vat]:
                  type: integer
                  example: '10'
                supplier_products[1][supplier_product_id]:
                  type: integer
                  example: '2'
                supplier_products[1][quantity]:
                  type: integer
                  example: '100'
                supplier_products[1][rate]:
                  type: integer
                  example: '12'
                supplier_products[1][vat]:
                  type: integer
                  example: '13'
                attachments[]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Purchase
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '8'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Purchase
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase/{id}/update-status:
    post:
      tags:
        - Admin > Purchase
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                status: approved
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase/{id}/attachment/{file_id}/rename:
    post:
      tags:
        - Admin > Purchase
      summary: attachment rename
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: asdffggg
                _method:
                  type: string
                  example: PATCH
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase/{id}/attachment/{file_id}:
    delete:
      tags:
        - Admin > Purchase
      summary: attachment delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase/{id}/attachment/{file_id}/download:
    get:
      tags:
        - Admin > Purchase
      summary: attachment dowload
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase-return:
    post:
      tags:
        - Admin > Purchase Return
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                supplier_id: 1
                return_date: '2024-06-15'
                reference: adsfasdf sdaf asdf a111111
                note: adsfasdf sdaf asdf a
                supplier_products:
                  - supplier_product_id: 1
                    quantity: 1
                    rate: 1000
                    vat: 13
                  - supplier_product_id: 2
                    quantity: 1
                    rate: 100
                    vat: 13
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Purchase Return
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: '//draft,approved,void '
        - name: supplier_id
          in: query
          schema:
            type: string
        - name: return_date
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase-return/{id}:
    post:
      tags:
        - Admin > Purchase Return
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                supplier_id: 1
                return_date: '2024-06-15'
                reference: adsfasdf sdaf asdf a111111
                note: adsfasdf sdaf asdf a
                supplier_products:
                  - supplier_product_id: 1
                    quantity: 1000
                    rate: 1000
                    vat: 13
                  - supplier_product_id: 1
                    quantity: 1000
                    rate: 100
                    vat: 13
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Purchase Return
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Purchase Return
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/purchase-return/{id}/update-status:
    post:
      tags:
        - Admin > Purchase Return
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                status: approved
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-payment:
    post:
      tags:
        - Admin > Supplier Payment
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: integer
                  example: '7'
                amount:
                  type: integer
                  description: in:null,0,13
                  example: '100'
                note:
                  type: string
                  example: 980678204 asdf asdf  dfsa fsdaf sdfsd
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier Payment
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '2'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-payment/{id}:
    post:
      tags:
        - Admin > Supplier Payment
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                supplier_id:
                  type: integer
                  example: '1'
                amount:
                  type: integer
                  example: '10'
                note:
                  type: string
                  example: '980678204 asdf asdf  dfsa fsdaf sdfsd '
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Supplier Payment
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Supplier Payment
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/supplier-payment/{id}/update-status:
    post:
      tags:
        - Admin > Supplier Payment
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/shifts:
    post:
      tags:
        - Admin > Event Booking > Shifts
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Morning Shift
                from: '06:00'
                to: '11:00'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Shifts
      summary: get all
      description: |-
        Allowed search column:

        - title
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: filter[title]
          in: query
          schema:
            type: string
          example: evening
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/shifts/{id}:
    put:
      tags:
        - Admin > Event Booking > Shifts
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Morning Shift sdfsd
                from: '06:00'
                to: '11:00'
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Shifts
      summary: get one
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Event Booking > Shifts
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/types:
    post:
      tags:
        - Admin > Event Booking > Types
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Wedding
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Types
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: filter[title]
          in: query
          schema:
            type: string
          example: cele
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/types/{id}:
    put:
      tags:
        - Admin > Event Booking > Types
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: New title
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Types
      summary: get one
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Event Booking > Types
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/sources:
    post:
      tags:
        - Admin > Event Booking > Source
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: phone
                is_active: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Source
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: filter[name]
          in: query
          schema:
            type: string
          example: phone
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/sources/{id}:
    put:
      tags:
        - Admin > Event Booking > Source
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: email
                is_active: false
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Event Booking > Source
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/categories:
    post:
      tags:
        - Admin > Event Booking > Categories
      summary: save
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 2
                name: Beverage
                products:
                  - id: 2
                    name: Beer
                    price: 500
                    is_active: true
                  - id: 3
                    name: Rum
                    price: 500
                    is_active: true
                  - id: 4
                    name: Coca Cola
                    price: 500
                    is_active: false
                    delete: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.3.19
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Wed, 23 Apr 2025 06:52:33 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '600'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '597'
            Vary:
              schema:
                type: string
                example: Origin
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
                message: Successfully saved category and its related products
    get:
      tags:
        - Admin > Event Booking > Categories
      summary: get all
      description: |-
        Supported search query

        - query
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/halls:
    post:
      tags:
        - Admin > Event Booking > Halls
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hall 1
                pax_count: 1000
                is_active: false
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Halls
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: ''
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/halls/{id}:
    put:
      tags:
        - Admin > Event Booking > Halls
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hall asdf
                pax_count: 1
                is_active: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Event Booking > Halls
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: create
      description: |-
        ### **Validation Rules**

        - **booked_date**
            
            - Required
                
            - Format: `Y-m-d`
                
        - **event_shift_id**, **event_type_id**, **event_source_id**
            
            - Required
                
            - Must exist in their respective tables (`event_shifts`, `event_types`, `event_sources`)
                
        - **estimated_guest_count**
            
            - Required
                
            - Must be a non-negative integer
                
        - **advance_amount**, **advance_payment_option_id**
            
            - Optional
                
            - Must be numeric and exist in the `payment_options` table, respectively
                
        - **booked_by**
            
            - Required
                
            - Must be an array
                
            - **name** (optional)
                
                - Must be a string with a maximum length of 255 characters
                    
            - **phone** (required)
                
                - Must be a string with a maximum length of 255 characters
                    
            - **email** (optional)
                
                - Must be a string with a maximum length of 255 characters
                    
            - **address** (optional)
                
                - Must be a string with a maximum length of 255 characters
                    
        - **booking_menu_products**
            
            - Required
                
            - Must be an array
                
            - **event_menu_product_id** (required)
                
                - Must exist in the `event_menu_products` table
                    
        - **booking_halls**
            
            - Required
                
            - Must be an array
                
            - **event_hall_id** (required)
                
                - Must exist in the `event_halls` table
                    
        - **booking_facilities**
            
            - Optional
                
            - Must be and array
                
            - **name**(required)
                
                - name of the facility
                    
            - **price**(required)
                
                - price of the facility
                    
            - **description**(optional)
                
                - description of the facility
                    
        - **override_guest_detail**
            
            - Optional
                
            - Nullable
                
            - Boolean
                
            - Must be provided to override existing detail of the guest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                booked_date: '2022-09-18'
                event_shift_id: 2
                event_type_id: 1
                event_source_id: 1
                estimated_guest_count: 10
                actual_rate_per_pax: 100
                booked_by:
                  name: Other
                  phone: '123457810'
                  email: johndoe@example.com
                  address: 123 Main St
                booking_menu_products:
                  - event_menu_product_id: 5
                  - event_menu_product_id: 6
                booking_halls:
                  - event_hall_id: 1
                  - event_hall_id: 2
                booking_facilities:
                  - name: Facility 1
                    price: 100
                    description: some description
                  - name: Facility 2
                    price: 200
                    description: some description
                override_guest_detail: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Bookings
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: filter[type]
          in: query
          schema:
            type: string
          example: INQUIRY,BOOKING
        - name: filter[booking_code]
          in: query
          schema:
            type: integer
          example: '3'
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: filter[booking_date_between]
          in: query
          schema:
            type: string
          example: 2022-09-11,2022-09-12
        - name: filter[eventBookingHalls.eventHall.name]
          in: query
          schema:
            type: string
          example: Hall asdf
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}/facilities:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: modify facilities
      description: |-
        **Instructions for operations**

        - include nothing to create a facility
            
        - include `id` and modify remaining values for update
            
        - include `id` and `delete:true` to delete the selected facility
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                booking_facilities:
                  - name: Facility asd 12
                    price: 1000
                    description: some description
                  - name: Facility 2
                    price: 200
                    description: some description
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}:
    put:
      tags:
        - Admin > Event Booking > Bookings
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                booked_date: '2022-07-25'
                event_shift_id: 1
                event_type_id: 1
                event_source_id: 1
                estimated_guest_count: 100
                actual_rate_per_pax: 20
                booked_by:
                  name: John Doe asd
                  phone: 123-456-7890
                  email: johndoe@example.com
                  address: 123 Main St
                booking_menu_products:
                  - id: 19
                    event_menu_product_id: 7
                booking_halls:
                  - id: 164
                    event_hall_id: 3
                booking_facilities:
                  - name: Facility  asd 1
                    price: 100
                    description: some description
                  - name: Facility 2
                    price: 200
                    description: some description
                  - name: Facility 1
                    price: 100
                    description: some description
                  - name: Facility 2
                    price: 200
                    description: some description
                override_guest_detail: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '90'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Booking > Bookings
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '102'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/statistics:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: get statistics
      description: |-
        Supported Types:

        - AGGREGATE_BY_COUNT
            
        - AGGREGATE_BY_DETAIL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                types:
                  - AGGREGATE_BY_DETAIL
                AGGREGATE_BY_COUNT:
                  from: '2022-07-01'
                  to: '2022-07-30'
                AGGREGATE_BY_DETAIL:
                  from: '2022-07-01'
                  to: '2022-07-30'
                HALLS_BY_DATE_AND_SHIFT:
                  date: '2022-07-25'
                  event_shift_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}/pay:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: pay
      description: |-
        supported discount types

        - PERCENT
            
        - AMOUNT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                actual_rate_per_pax: 10
                actual_guest_count: 100
                discount: 100
                discount_type: AMOUNT
                customer_id: 812
                paid_amount: 1356
                fragments:
                  - payment_option_id: 40
                    received_amount: 1356
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '115'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}/actual-guest-count:
    patch:
      tags:
        - Admin > Event Booking > Bookings
      summary: update actual guest count
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                actual_guest_count: 1000
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}/confirm:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: confirm booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                advance_amount: 10000
                advance_payment_option_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '79'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/bookings/{id}/cancel:
    post:
      tags:
        - Admin > Event Booking > Bookings
      summary: cancel booking
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '79'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/report/excel:
    get:
      tags:
        - Admin > Event Booking > Reports
      summary: get report
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          example: EVENT_BOOKING_REPORT
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: from
          in: query
          schema:
            type: string
          example: '2022-08-01'
        - name: to
          in: query
          schema:
            type: string
          example: '2022-08-30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/report/records:
    get:
      tags:
        - Admin > Event Booking > Reports
      summary: get records
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: type
          in: query
          schema:
            type: string
          example: EVENT_BOOKING_REPORT
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: from
          in: query
          schema:
            type: string
          example: '2022-08-01'
        - name: to
          in: query
          schema:
            type: string
          example: '2022-08-30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/report/aggregate:
    get:
      tags:
        - Admin > Event Booking > Reports
      summary: get aggregate
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: type
          in: query
          schema:
            type: string
          example: EVENT_BOOKING_REPORT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/companies/branches:
    get:
      tags:
        - Admin > V2
      summary: list all branches
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/companies/{company-id}/users:
    get:
      tags:
        - Admin > V2
      summary: get all users of company
      security:
        - bearerAuth: []
      parameters:
        - name: company-id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/companies/{company-id}/invite-user:
    post:
      tags:
        - Admin > V2
      summary: invite user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: latest@user.com
                roles:
                  - cashier
                  - waiter
                branch_ids:
                  - 1
                  - 16
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: company-id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/accept-reject-invitation:
    post:
      tags:
        - Admin > V2
      summary: accept/reject invitaiton
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: newer@user.com
                is_accepted: true
      security:
        - noauthAuth: []
      parameters:
        - name: email
          in: query
          schema:
            type: string
          example: newer@user.com
        - name: token
          in: query
          schema:
            type: string
          example: >-
            1XZaGCuqYA6DTuGlXg5chK2r8KPYuOdMbTX5IpMZ1BjweDIdNdS252eskZziRbx2gTy96JHVLGUzxqNXry3ZYFvsmMPoyHTvwOTqbHpqRfEuoxOwDUJcopszz5Ag0ZqE
        - name: organization
          in: query
          schema:
            type: string
          example: Demo%20Company
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/companies/{company-id}/users/{user-id}/unassign:
    post:
      tags:
        - Admin > V2
      summary: unassign user
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: company-id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: user-id
          in: path
          schema:
            type: integer
          required: true
          example: '103'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/login:
    post:
      tags:
        - Admin > V2
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: gsaurav2000@gmail.com
                password: P@ssw0rd
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/admin/companies/{company-id}/update-user-detail:
    put:
      tags:
        - Admin > V2
      summary: update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 1
                roles:
                  - waiter
                  - admin
                branch_ids:
                  - 1
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
        - name: company-id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/print-issue:
    post:
      tags:
        - Admin
      summary: Print Issue store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 2
                order_id: 54232
                order_type: KOT
                order_type_no: 2
                extra:
                  printer_ip_address: 192.168.10.1
                  device_ip_address: 192.168.10.1
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/floor-and-tables:
    post:
      tags:
        - Admin
      summary: Save floor and table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 67
                floor_name: Floor new name
                floor_order_number: 5
                tables:
                  - id: 397
                    table_number: Table some
                    show_table: inactive
                    table_capacity: '9'
                  - id: 396
                    table_number: Table 2
                    table_capacity: '4'
                    show_table: inactive
                  - id: 398
                    table_number: Table 3
                    table_capacity: '4'
                    show_table: inactive
                  - table_number: Table new
                    table_capacity: '4'
                    show_table: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partners/4/products:
    post:
      tags:
        - Admin
      summary: save delivery partner product
      description: |-
        How to perform operations:

        1. **Create**: provice only `product_id` and `price`
            
        2. **Update**: provide `id` with above data
            
        3. Delete: provide boolean `delete` with above data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                delivery_partners:
                  - id: 1
                    product_id: 111
                    price: 100
                  - id: 2
                    product_id: 112
                    price: 100
                  - id: 3
                    product_id: 125
                    price: 500
                    delete: true
      security:
        - bearerAuth: []
      parameters:
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/account-verification:
    post:
      tags:
        - Public > auth
      summary: complete registration
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: WzNnomyLsm0rQ09Y8X77hNBBvAQqYBfcPhx6Gi7d1vYbIup9TNtYwO80b2Ha
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin-login:
    post:
      tags:
        - Public > auth
      summary: super admin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/login:
    post:
      tags:
        - Superadmin > Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/refresh-token/{refresh_token}:
    post:
      tags:
        - Superadmin > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/logout:
    post:
      tags:
        - Superadmin > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user-detail:
    get:
      tags:
        - Superadmin > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/update-user-detail:
    post:
      tags:
        - Superadmin > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                name:
                  type: string
                  example: Super admin
                profile_image:
                  type: string
                  format: binary
                delete_image:
                  type: string
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/change-password:
    post:
      tags:
        - Superadmin > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/delete-user:
    delete:
      tags:
        - Superadmin > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company:
    post:
      tags:
        - Superadmin > company old
      summary: create company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Kitchen King
                display_name:
                  type: string
                  example: K. King
                address:
                  type: string
                  example: Purano Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti01@gmail.com
                primary_phone:
                  type: integer
                  example: '980678203'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > company old
      summary: get all company list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: business
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{company_id}:
    get:
      tags:
        - Superadmin > company old
      summary: get single company detail
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > company old
      summary: delete company
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Superadmin > company old
      summary: update company details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Business
                display_name:
                  type: string
                  example: By
                address:
                  type: string
                  example: KTM
                primary_email:
                  type: string
                  example: admin@gmail.com
                primary_phone:
                  type: integer
                  example: '984334645'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
                bill_heading:
                  type: string
                  example: sfg
                bill_remarks:
                  type: string
                  example: fgdhg
                is_tax:
                  type: string
                  example: active
                _method:
                  type: string
                  example: put
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service:
    post:
      tags:
        - Superadmin > business service old
      summary: create business service
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  example: '1'
                hotel:
                  type: string
                  example: hotel
                restaurant:
                  type: string
                  example: restaurant
                event:
                  type: string
                  example: event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > business service old
      summary: get all company business service list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service/{id}:
    get:
      tags:
        - Superadmin > business service old
      summary: get single business service data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service/{company_id}:
    post:
      tags:
        - Superadmin > business service old
      summary: update business service
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hotel:
                  type: string
                  example: hotel
                restaurant:
                  type: string
                  example: restaurant
                event:
                  type: string
                  example: event
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-admin:
    post:
      tags:
        - Superadmin > business admin old
      summary: create business admin account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                business_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission:
    get:
      tags:
        - Superadmin > Permission
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: show_in
          in: query
          schema:
            type: string
          description: superadmin_panel|admin_panel
          example: superadmin_panel
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission/{id}:
    get:
      tags:
        - Superadmin > Permission
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role:
    post:
      tags:
        - Superadmin > Role
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: waiter1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          description: 1||0
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          description: '||name'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}:
    post:
      tags:
        - Superadmin > Role
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: waiter2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Role
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}/assign-permission:
    post:
      tags:
        - Superadmin > Role
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user:
    post:
      tags:
        - Superadmin > User
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user2@email.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 2
                image:
                  type: string
                  format: binary
                company_id:
                  type: string
                roles[]:
                  type: string
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: status
          in: query
          schema:
            type: string
          description: '||active,inactive'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: role
          in: query
          schema:
            type: string
          description: superadmin
        - name: roles
          in: query
          schema:
            type: string
          description: '["superadmin","admin"]'
        - name: superadmin_panel_users
          in: query
          schema:
            type: string
          description: 1|0
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}:
    post:
      tags:
        - Superadmin > User
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 1
                company_id:
                  type: string
                roles[]:
                  type: string
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > User
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-role:
    post:
      tags:
        - Superadmin > User
      summary: assign role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                roles:
                  - admin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-permission:
    post:
      tags:
        - Superadmin > User
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/dashboard:
    get:
      tags:
        - Superadmin > Dashboard
      summary: dashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package:
    post:
      tags:
        - Superadmin > Package
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Un Package
                user: -1
                table: -1
                payment_integration: true
                period_prices:
                  - period: 30
                    price: 1000
                    branch_price: 800
                  - period: 90
                    price: 2800
                    branch_price: 1500
                  - period: 180
                    price: 5200
                    branch_price: 4000
                  - period: 365
                    price: 10000
                    branch_price: 6000
                is_trial: false
                is_recommended: false
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Package
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: in:active,inactive
        - name: is_trial
          in: query
          schema:
            type: string
          description: true|false
        - name: is_recommended
          in: query
          schema:
            type: string
          description: true|false
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package/{id}:
    post:
      tags:
        - Superadmin > Package
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                name: Standard Package
                user: 3
                table: 12
                payment_integration: true
                period_prices:
                  - id: 3
                    period: 30
                    price: 1001
                    branch_price: 801
                  - id: 4
                    period: 90
                    price: 2801
                    branch_price: 1501
                  - id: 5
                    period: 180
                    price: 5201
                    branch_price: 4001
                  - id: 6
                    period: 365
                    price: 10001
                    branch_price: 6001
                  - period: 730
                    price: 15001
                    branch_price: 11001
                is_trial: false
                is_recommended: false
                type: restaurant
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Package
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Package
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package/{id}/update-status:
    post:
      tags:
        - Superadmin > Package
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/subscribe-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: subscribe package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 2
                period: 30
                no_of_branch: 2
                discount: null
                user: 1
                table: 10
                payment_integration: true
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/modify-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: modify package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 11
                period: 10
                no_of_branch: 4
                discount: null
                user: -1
                table: -1
                payment_integration: true
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/unsubscribe-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: unsubscribe package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 3
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company:
    post:
      tags:
        - Superadmin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Company 2 Org
                display_name:
                  type: string
                  example: Company 2
                address:
                  type: string
                  example: BaneshworM, Kathmandu
                primary_email:
                  type: string
                  example: company2@company.com
                primary_phone:
                  type: integer
                  example: '9876543211'
                vat_number:
                  type: integer
                  example: '123456'
                registration_number:
                  type: integer
                  example: '123456'
                start_date:
                  type: string
                  example: '2020-10-10'
                company_image:
                  type: string
                  format: binary
                is_tax:
                  type: string
                  example: active
                service_ids[]:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Company
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: '||active,inactive'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}:
    post:
      tags:
        - Superadmin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                business_name:
                  type: string
                  example: K King
                display_name:
                  type: string
                  example: K. King
                address:
                  type: string
                  example: Purano Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: jedibe5032@shaflyn.com
                primary_phone:
                  type: integer
                  example: '980678200'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: string
                  example: '2020-10-10'
                is_tax:
                  type: string
                  example: active
                service_ids[]:
                  type: integer
                  example: '8'
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Company
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Company
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/update-status:
    post:
      tags:
        - Superadmin > Company
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/owner:
    get:
      tags:
        - Superadmin > Company
      summary: company owner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/assign-update-owner:
    post:
      tags:
        - Superadmin > Company
      summary: assign or update owner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: augxdeveloper@gmail.com
                is_resend: null
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/owner/invitations:
    get:
      tags:
        - Superadmin > Company
      summary: list company owner invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/owner/invitation/{user_temporary_data_id}:
    delete:
      tags:
        - Superadmin > Company
      summary: delete owner invitation
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: user_temporary_data_id
          in: path
          schema:
            type: integer
          required: true
          example: '23'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/unassign-owner:
    post:
      tags:
        - Superadmin > Company
      summary: unassign owner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/service:
    get:
      tags:
        - Superadmin > Service
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: in:active,inactive
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/service/{id}:
    get:
      tags:
        - Superadmin > Service
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/payment-option:
    post:
      tags:
        - Superadmin > Payment Option
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: cash1
                status:
                  type: string
                  example: active
                is_cash:
                  type: boolean
                  example: 'true'
                payment_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Payment Option
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: is_cash
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/payment-option/{id}:
    post:
      tags:
        - Superadmin > Payment Option
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                payment_name:
                  type: string
                  example: Khalti1
                status:
                  type: string
                  example: active
                is_cash:
                  type: boolean
                  example: 'false'
                payment_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '18'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Payment Option
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Payment Option
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/payment-option/{id}/update-status:
    post:
      tags:
        - Superadmin > Payment Option
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug:
    post:
      tags:
        - Superadmin > Bug
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: bug 1
                screenshot:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug/{id}:
    post:
      tags:
        - Superadmin > Bug
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                description:
                  type: string
                  example: bug 1 e
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Bug
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug/{id}/update-status:
    post:
      tags:
        - Superadmin > Bug
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: dsfasdfa
                bug_id:
                  type: integer
                  example: '6'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug Feedback
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: bug_id
          in: query
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback/{id}:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                comment:
                  type: string
                  example: 'abc def '
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Bug Feedback
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug Feedback
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback/{id}/update-status:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting:
    get:
      tags:
        - Superadmin > Site Setting
      summary: site setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Superadmin > Site Setting
      summary: site setting update or create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Scodus
                address:
                  type: string
                  example: Nepal
                primary_email:
                  type: string
                  example: info@scodus.com
                secondary_email:
                  type: string
                primary_phone:
                  type: string
                secondary_phone:
                  type: string
                map_location:
                  type: string
                registration_number:
                  type: string
                linkedin_url:
                  type: string
                facebook_url:
                  type: string
                twitter_url:
                  type: string
                youtube_url:
                  type: string
                instagram_url:
                  type: string
                logo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/orders:
    get:
      tags:
        - Superadmin > Order
      summary: show all order lsit
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/fiscal-years:
    post:
      tags:
        - Superadmin > Fiscal Year
      summary: store fiscal year
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 2081/83
                from_bs:
                  type: string
                  example: '2081-01-20'
                to_bs:
                  type: string
                  example: '2082-01-20'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Fiscal Year
      summary: show all fiscal years
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/db-backup/create:
    post:
      tags:
        - Superadmin > DB Backup
      summary: Db Backup
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/backup-database-delete-record:
    post:
      tags:
        - Superadmin > DB Backup
      summary: Db Backup and Delete Record
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
          example: '2025-01-30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/branch-backup-database-delete-record/{branch_id}:
    post:
      tags:
        - Superadmin > DB Backup
      summary: Branch Db Backup and Delete Record
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
          example: '2024-12-31'
        - name: branch_id
          in: path
          schema:
            type: integer
          required: true
          description: 2 - Wings Factory NB / 5-Kimchi Anamnagar
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/print-issue:
    get:
      tags:
        - Superadmin > Print Issue
      summary: Print Issue All
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: branch_id
          in: query
          schema:
            type: integer
          example: '5'
        - name: user_id
          in: query
          schema:
            type: integer
          example: '2'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2025-03-10'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2025-03-11'
        - name: order_type
          in: query
          schema:
            type: string
          description: KOT|BOT|KOT1|BOT1
          example: KOT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/sync-invoice/{branch_id}:
    post:
      tags:
        - Superadmin > System Sync
      summary: Sync Invoices
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: branch_id
          in: path
          schema:
            type: integer
          required: true
          example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/sync-due-payments/{branch_id}:
    post:
      tags:
        - Superadmin > System Sync
      summary: Sync Payments
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: branch_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/menu-products/transfer:
    post:
      tags:
        - Superadmin
      summary: transfer products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                from_company_id: 14
                from_branch_id: 22
                to_company_id: 14
                to_branch_id: 28
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
