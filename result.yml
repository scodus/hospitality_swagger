openapi: 3.0.0
info:
  title: Hospitality Management
  description: Hospitality Management API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://hospitality-api.scoduscorp.com
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Admin
  - name: Admin > user
  - name: Admin > Restaurant
  - name: Admin > Restaurant > customer
  - name: Admin > Restaurant > Restaurant payment options
  - name: Admin > Restaurant > Restaurant Reports
  - name: Admin > Restaurant > Restaurant Cashier
  - name: Admin > Restaurant > Restaurant Cashier Session
  - name: Admin > Restaurant > Restaurant PickUp Users
  - name: Admin > Restaurant > Restaurant Customer Partial Payments
  - name: Admin > Restaurant > Restaurant Order Payment
  - name: Admin > Restaurant > Restaurant Order Details
  - name: Admin > Restaurant > Restaurant product variation
  - name: Admin > Restaurant > Restaurant products
  - name: Admin > Restaurant > Restaurant product category
  - name: Admin > Restaurant > Favourite Menu Items
  - name: Admin > Restaurant > Restaurant Order
  - name: Admin > Restaurant > Restaurant floor
  - name: Admin > Restaurant > Restaurant table
  - name: Admin > Restaurant > Kitchen Order Ticket
  - name: Admin > Restaurant > Bar Order Ticket
  - name: Admin > Restaurant > Ask Bill
  - name: Admin > Restaurant > KOT Items
  - name: Admin > Restaurant > BOT Items
  - name: Admin > Restaurant > Delivery partner
  - name: Admin > Restaurant > Self Delivery User
  - name: Admin > Restaurant > Split Bill
  - name: Admin > Restaurant > Cash In/Out
  - name: Admin > Restaurant > Topping Items
  - name: Admin > Restaurant > Manager Session
  - name: Admin > Restaurant > Day Book
  - name: Admin > Restaurant > Restaurant Dashboard
  - name: Admin > Restaurant > Delivery Partner Payment
  - name: Admin > Printers
  - name: Admin > roles OLD
  - name: Admin > Human Resource
  - name: Admin > Human Resource > department
  - name: Admin > Human Resource > positions
  - name: Admin > Human Resource > employees
  - name: Admin > Duty Roster
  - name: Admin > Duty Roster > roster time
  - name: Admin > Duty Roster > roster task
  - name: Admin > Duty Roster > restaurant roster
  - name: Admin > Hotel
  - name: Admin > Hotel > hotel floor
  - name: Admin > Inventory
  - name: Admin > Inventory > Unit of Measurement
  - name: Admin > Inventory > Inventory Products
  - name: Admin > Inventory > Inventory Adjustment
  - name: Admin > Company OLD
  - name: Admin > Authentication
  - name: Admin > Permission
  - name: Admin > Role
  - name: Admin > Company
  - name: Admin > Branch
  - name: Public
  - name: Public > auth
  - name: Superadmin
  - name: Superadmin > company old
  - name: Superadmin > business service
  - name: Superadmin > business admin
  - name: Superadmin > Authentication
  - name: Superadmin > Permission
  - name: Superadmin > Role
  - name: Superadmin > User
  - name: Superadmin > Dashboard
  - name: Superadmin > Package
  - name: Superadmin > Company
  - name: Superadmin > Company > Package Subscription
  - name: Superadmin > Service
  - name: Superadmin > Bug
  - name: Superadmin > Bug Feedback
  - name: Superadmin > Site Setting
paths:
  /api/admin/users:
    post:
      tags:
        - Admin > user
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bishal Gurung
                email:
                  type: string
                  example: grgbishal360@gmail.com
                company_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > user
      summary: get all users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Hancie
        - name: role
          in: query
          schema:
            type: string
          example: Waiter
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users/{user_id}:
    post:
      tags:
        - Admin > user
      summary: update user data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > user
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > user
      summary: show single user data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users/change-password:
    post:
      tags:
        - Admin > user
      summary: change user password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: integer
                  example: '12656566'
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers:
    post:
      tags:
        - Admin > Restaurant > customer
      summary: create customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago25@gmail.com
                phone:
                  type: integer
                  example: '454545455'
                address:
                  type: string
                  example: KTM
                vat_number:
                  type: integer
                  example: '45456'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > customer
      summary: get all customers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '4'
        - name: company_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Hancie Phago
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/customers/{customer_id}:
    delete:
      tags:
        - Admin > Restaurant > customer
      summary: delete customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > customer
      summary: update customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie2@gmail.com
                phone:
                  type: integer
                  example: '4545454555'
                address:
                  type: string
                  example: Jhapa
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > customer
      summary: show single customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/api/admin/customers/show-orders/1:
    get:
      tags:
        - Admin > Restaurant > customer
      summary: show single customer data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-options:
    post:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: create payment option
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: 'IME '
                payment_image:
                  type: string
                  format: binary
                commission_percent:
                  type: integer
                  example: '5'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 06:51:39 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  payment_name: Khalti
                  slug: khalti
                  payment_image: http://localhost:8000/storage/3/download.png
                  created_at: '2023-12-20T06:51:38.000000Z'
                  updated_at: null
                message: Payment Option Has Been Created Successfully!
  /admin/payment-options:
    get:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: get all product options list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 07:00:13 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    payment_name: Khalti
                    slug: khalti
                    payment_image: http://localhost:8000/storage/3/download.png
                    created_at: '2023-12-20T06:51:38.000000Z'
                    updated_at: null
                  - id: 1
                    payment_name: eSewa
                    slug: esewa
                    payment_image: ''
                    created_at: '2023-12-20T06:50:50.000000Z'
                    updated_at: null
                links:
                  first: http://127.0.0.1:8000/admin/payment-options?page=1
                  last: http://127.0.0.1:8000/admin/payment-options?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/payment-options?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/payment-options
                  per_page: 5
                  to: 2
                  total: 2
  /admin/payment-options/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: update payment options
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_name:
                  type: string
                  example: khalti
                payment_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 20 Dec 2023 07:01:54 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  payment_name: khalti
                  slug: khalti
                  payment_image: http://localhost:8000/storage/4/download.png
                  created_at: '2023-12-20T06:51:38.000000Z'
                  updated_at: null
                message: Payment Option Data Has Been Updated Successfully!
    delete:
      tags:
        - Admin > Restaurant > Restaurant payment options
      summary: delete payment options
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/daily-income:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: daily income
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-04'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-01-06'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-user:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales by user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/sales-by-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: sales by category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/cancelled-orders:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: cancelled orders report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/reports/income-by-time:
    get:
      tags:
        - Admin > Restaurant > Restaurant Reports
      summary: income by time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: date
          in: query
          schema:
            type: string
          example: 12-04-2023
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier/today-sales:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: get today sales
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier/sales-history:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier
      summary: sales history
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session:
    post:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: Cashier Session In
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                drawer_amount:
                  type: integer
                  example: '500'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 22 Dec 2023 07:34:14 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  session_in: '2023-12-22 07:34:14'
                  session_out: null
                  user_id: 10
                  status: active
                  created_at: 1 second ago
                  drawer_amount:
                    - id: 1
                      company_id: 1
                      session_id: 1
                      opening_drawer_amount: 500
                      cash_payment_amount: null
                      other_payment_amount: null
                      created_at: '2023-12-22T07:34:14.000000Z'
                      updated_at: '2023-12-22T07:34:14.000000Z'
                message: Session Started successfully!
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: get all cashier session details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '40'
        - name: running-session
          in: query
          schema:
            type: boolean
          example: 'true'
        - name: date
          in: query
          schema:
            type: string
          example: 12-26-2023
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session/status/check-session:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: Cashier Session Check
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-session/{session_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: session checkout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cash_payment_amount:
                  type: integer
                  example: '56777'
                other_payment_amount:
                  type: integer
                  example: '56'
                total_cash_in_hand:
                  type: integer
                  example: '556'
                employee_cash_in_hand:
                  type: integer
                  example: '56'
                note:
                  type: string
                  example: fgfh
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: session_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/drawer_amounts:
    get:
      tags:
        - Admin > Restaurant > Restaurant Cashier Session
      summary: get drawer amounts
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 22 Dec 2023 07:37:15 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  drawer_amount:
                    total_drawer_amounts: 500
                  paymentAmount:
                    cash_payment: null
                    other_payment: null
                    total_sales: null
                  total_cash_in_hand: '500.00'
  /admin/pickup-users:
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: create pickup users
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Nitesh Hamal
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: get all pick up user
      security:
        - bearerAuth: []
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 23 Jan 2024 07:08:24 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    full_name: Nitesh Hamal
                    mobile_no: '9813371345'
                    created_at: '2023-12-21T05:49:10.000000Z'
                    pending_order:
                      - id: 123
                        order_number: 202422EEQXJ
                        company_id: 1
                        user_id: 10
                        table_id: 5
                        customer_id: 1
                        pickup_user_id: 1
                        delivery_partner_id: 2
                        description: ab cd ef gh
                        status: pending
                        created_at: '2024-01-22T07:39:06.000000Z'
                        updated_at: '2024-01-22T07:39:06.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/pickup-users?page=1
                  last: http://127.0.0.1:8000/admin/pickup-users?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/pickup-users?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/pickup-users
                  per_page: 2
                  to: 1
                  total: 1
  /admin/pickup-users/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: delete pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: get single order data by take away user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: update pickup user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Pravesh Rai
                mobile_no:
                  type: integer
                  example: '9813371345'
                location:
                  type: string
                  example: Shankamul
                time:
                  type: string
                  example: '2023-10-16 09:12:00'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pickup-users/order/update:
    post:
      tags:
        - Admin > Restaurant > Restaurant PickUp Users
      summary: update order of take away user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 51
                description: ab cd ef gh
                pickup_user_id: 1
                productDetails:
                  - product_id: 1
                    price: 100
                    quantity: 5
                    topping_details:
                      - topping_product_id: 5
                        topping_quantity: 50
                        topping_price: 110
                      - topping_product_id: 7
                        topping_quantity: 50
                        topping_price: 110
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customer-partial-payment/1:
    post:
      tags:
        - Admin > Restaurant > Restaurant Customer Partial Payments
      summary: update customer partial payment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                paid_amount:
                  type: integer
                  example: '20'
                payment_method_id:
                  type: integer
                  example: '1'
                payment_method:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customer-partial-payment/order-items/{id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Customer Partial Payments
      summary: get order items data by customer partial id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: store order payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payment_method: 1
                table_id: 5
                customer_id: 1
                order_id: 2
                subtotal: 344
                tax: 3
                discount: 3434
                discount_type: rupees
                net_total: 100
                paid: 400
                return: 344
                net_amount: 34434
                name: Pravesh Rai
                email: pravesh@gmail.com
                phone: 983443354
                address: lalitpur
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: get all order payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-payments/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: delete order payment
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/payment-order-details/{table_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: Show payment order details by table number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Fri, 12 Jan 2024 11:42:56 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - variation_name: Chaumin
                    total_quantity: '18'
                    price: 150
                    total_amount: 2700
                  - variation_name: Fry Momo
                    total_quantity: '45'
                    price: 100
                    total_amount: 4500
                  - variation_name: Chaumin
                    total_quantity: '45'
                    price: 100
                    total_amount: 4500
                  - variation_name: Chaumin
                    total_quantity: '2'
                    price: 150
                    total_amount: 300
                  - variation_name: Fry Momo
                    total_quantity: '5'
                    price: 100
                    total_amount: 500
                  - variation_name: Chaumin
                    total_quantity: '5'
                    price: 100
                    total_amount: 500
  /admin/orders/all/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Payment
      summary: get single order payment details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: delete order details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: update order details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: integer
                  example: '2'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details/status/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: ordered
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/order-details:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order Details
      summary: get all order detail
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations:
    get:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: get all product variations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Momo
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 10:54:36 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 5
                    variation_name: Steam Momo
                    price: 100
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
                  - id: 6
                    variation_name: Fry Momo
                    price: 200
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
  /admin/product-variations/{id}:
    delete:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: delete product variation
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations/search/product_variation:
    get:
      tags:
        - Admin > Restaurant > Restaurant product variation
      summary: search product variation in menu
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: search_keyword
          in: query
          schema:
            type: string
          example: Pizza
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: create product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Momo
                product_category_id: 2
                ingredient: gffg
                description: fgfgfg
                price: 550
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 07:18:08 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  product_name: Momo
                  slug: momo
                  product_category_id: 1
                  base_price: 550
                  ingredient: gffg
                  description: fgfgfg
                  product_image: ''
                  has_variation: 1
                  product_variation:
                    - id: 1
                      variation_name: Steam Momo
                      price: 100
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                    - id: 2
                      variation_name: Fry Momo
                      price: 200
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                message: Product Has Been Created Successfully!
    get:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: get all products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: update product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Chicken
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_inventory_tracking:
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                  - inventory_product_id: 1
                    unit_name: Bottle
                    size: XL
                base_price: 550
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant products
      summary: delete product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/product-category:
    post:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: create product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Budweiser
                parent_category_id:
                  type: integer
                  example: '2'
                description:
                  type: string
                  example: My momo
                bar:
                  type: integer
                  example: '1'
                category_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: branch_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: get all product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category/{slug}:
    post:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: update product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '20'
                description:
                  type: string
                  example: My momo
                category_image:
                  type: string
                  format: binary
                bar:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: delete product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show single product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all/{payment_order_no}:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: get single data for order table
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: payment_order_no
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/nested-product-category:
    get:
      tags:
        - Public > auth
      summary: show all nested product category
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 01 Jan 2024 08:52:43 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 3
                    category_name: Drink
                    slug: ''
                    parent_category_id: null
                    bar: 0
                    description: My momo
                    category_image: ''
                    status: 0
                    created_at: '2023-11-28T09:35:58.000000Z'
                    updated_at: '2023-11-28T09:35:58.000000Z'
                    parent_category: null
                    child_categories:
                      - id: 1
                        category_name: Juice
                        slug: momo
                        parent_category_id: 3
                        bar: null
                        description: My momo
                        category_image: ''
                        status: 0
                        created_at: '2023-11-28T09:35:58.000000Z'
                        updated_at: '2023-11-28T09:35:58.000000Z'
                        products:
                          - id: 1
                            product_name: Momo
                            slug: momo
                            product_category_id: 1
                            base_price: 550
                            ingredient: gffg
                            description: fgfgfg
                            product_image: ''
                            has_variation: 1
                            product_variation:
                              - id: 2
                                variation_name: Tea
                                price: 200
                                created_at: '2023-11-28T09:35:43.000000Z'
                                updated_at: '2023-11-28T09:35:43.000000Z'
                              - id: 45
                                variation_name: Steam Momo
                                price: 100
                                created_at: '2023-11-28T09:35:43.000000Z'
                                updated_at: '2023-11-28T09:35:43.000000Z'
                    products: []
                  - id: 4
                    category_name: Food
                    slug: ''
                    parent_category_id: null
                    bar: 0
                    description: My momo
                    category_image: ''
                    status: 0
                    created_at: '2023-11-28T09:35:58.000000Z'
                    updated_at: '2023-11-28T09:35:58.000000Z'
                    parent_category: null
                    child_categories:
                      - id: 2
                        category_name: Momo
                        slug: momo
                        parent_category_id: 4
                        bar: 0
                        description: My momo
                        category_image: ''
                        status: 0
                        created_at: '2023-11-28T09:35:58.000000Z'
                        updated_at: '2023-11-28T09:35:58.000000Z'
                        products: []
                    products: []
  /admin/categories/groups:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show all prodcut category group
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parent-category:
    get:
      tags:
        - Admin > Restaurant > Restaurant product category
      summary: show parent category only
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/favourite-menu-items:
    post:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: create favourite menu items
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: integer
                  example: '8'
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: get all favourite items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/favourite-menu-items/{id}:
    delete:
      tags:
        - Admin > Restaurant > Favourite Menu Items
      summary: delete favourite items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 01 Feb 2024 07:56:20 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  user_id: 10
                  product_variation_id: 6
                  created_at: '2024-02-01T06:56:36.000000Z'
                  updated_at: '2024-02-01T06:56:36.000000Z'
                message: Item removed successfully!
  /api/admin/orders:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: create order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                customer_id: 1
                description: ab cd ef gh
                delivery_partner_id: 2
                productDetails:
                  - product_id: 1
                    price: 100
                    quantity: 5
                    topping_details:
                      - topping_product_id: 2
                        topping_quantity: 50
                        topping_price: 110
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: edit order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                productDetails:
                  - product_variation_id: 8
                    price: 100
                    quantity: 5
                  - product_variation_id: 6
                    price: 100
                    quantity: 5
                  - product_variation_id: 7
                    price: 150
                    quantity: 2
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: delete order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get all order list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/status/{id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: cancelled
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/{table_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get single order data by table no
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/pickup-user/{pickup_user_id}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get single order by pickup user
      security:
        - bearerAuth: []
      parameters:
        - name: pickup_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get all order for order table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '15'
        - name: search
          in: query
          schema:
            type: string
          example: 202401123MJJY
        - name: status
          in: query
          schema:
            type: string
          example: pending
        - name: user_status
          in: query
          schema:
            type: string
          example: delivery_partner
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/data/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: get order data by order number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/orders/all/view:
    get:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: show all order by category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/change-order-table:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: Change order table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_id:
                  type: integer
                  example: '4'
                order_id:
                  type: integer
                  example: '11'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cancel-order:
    post:
      tags:
        - Admin > Restaurant > Restaurant Order
      summary: Cancel order
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: '11'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors:
    post:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: create floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F58
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: get all floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/{floor_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: update floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: Floor 4
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T5
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: floor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant floor
      summary: delete floor
      parameters:
        - name: floor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables:
    post:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: create table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table t2
                table_capacity:
                  type: integer
                  example: '3'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: get all company details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/{table_id}:
    post:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: update table data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table T2
                table_capacity:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Restaurant table
      summary: delete table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/kot:
    get:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: get all kot list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: string
          example: pending
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:33:36 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 70
                    company_id: 1
                    table_number: T5
                    order_id: 96
                    kot_no: 202414YLUXB
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    kot_items: []
                  - id: 69
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    kot_no: 202414GW6QW
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    kot_items:
                      - id: 139
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 243
                        product_name: Chaumin
                        price: 100
                        current_quantity: 5
                        preparation_status: pending
                        note: ''
                        total: 500
                      - id: 140
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 245
                        product_name: Chaumin
                        price: 150
                        current_quantity: 5
                        preparation_status: pending
                        note: My Note
                        total: 750
                      - id: 143
                        company_id: 1
                        kitchen_order_ticket_id: 69
                        order_detail_id: 245
                        product_name: Chaumin
                        price: 150
                        current_quantity: 15
                        preparation_status: pending
                        note: BOT Note
                        total: 2250
  /admin/kot/{id}:
    get:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: get single kot order items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:34:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 69
                  company_id: 1
                  table_number: T3
                  order_id: 98
                  kot_no: 202414GW6QW
                  preparation_status: pending
                  time: 05:09 pm
                  date: Jan 14, 2024
                  kot_items:
                    - id: 139
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 243
                      product_name: Chaumin
                      price: 100
                      current_quantity: 5
                      preparation_status: pending
                      note: ''
                      total: 500
                    - id: 140
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 245
                      product_name: Chaumin
                      price: 150
                      current_quantity: 5
                      preparation_status: pending
                      note: My Note
                      total: 750
                    - id: 143
                      company_id: 1
                      kitchen_order_ticket_id: 69
                      order_detail_id: 245
                      product_name: Chaumin
                      price: 150
                      current_quantity: 15
                      preparation_status: pending
                      note: BOT Note
                      total: 2250
  /admin/kot-status/update:
    post:
      tags:
        - Admin > Restaurant > Kitchen Order Ticket
      summary: update kot items status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                kot_id: 70
                kot_items:
                  - item_id: 199
                  - item_id: 198
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/bot:
    get:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: get all bot list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:41:40 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 66
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    bot_no: 202414XK1MQ
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    bot_items:
                      - id: 48
                        company_id: 1
                        bar_order_ticket_id: 66
                        order_detail_id: 247
                        product_name: Fry Momo
                        price: 100
                        current_quantity: 35
                        preparation_status: pending
                        note: BOT Note
                        total: 3500
                        quantity_change:
                          - id: 10
                            company_id: 1
                            item_id: 48
                            old_quantity: '48'
                            new_quantity: '30'
                            created_at: '2024-01-14T13:58:08.000000Z'
                            updated_at: '2024-01-14T13:58:08.000000Z'
                  - id: 65
                    company_id: 1
                    table_number: T3
                    order_id: 98
                    bot_no: 202414WRQKC
                    preparation_status: pending
                    time: 05:09 pm
                    date: Jan 14, 2024
                    bot_items:
                      - id: 47
                        company_id: 1
                        bar_order_ticket_id: 65
                        order_detail_id: 244
                        product_name: Fry Momo
                        price: 100
                        current_quantity: 5
                        preparation_status: pending
                        note: My Note
                        total: 500
                        quantity_change: []
  /admin/bot/{id}:
    get:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: get single bar order ticket details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 16 Jan 2024 06:42:26 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 66
                  company_id: 1
                  table_number: T3
                  order_id: 98
                  bot_no: 202414XK1MQ
                  preparation_status: pending
                  time: 05:09 pm
                  date: Jan 14, 2024
                  bot_items:
                    - id: 48
                      company_id: 1
                      bar_order_ticket_id: 66
                      order_detail_id: 247
                      product_name: Fry Momo
                      price: 100
                      current_quantity: 35
                      preparation_status: pending
                      note: BOT Note
                      total: 3500
                      quantity_change:
                        - id: 10
                          company_id: 1
                          item_id: 48
                          old_quantity: '48'
                          new_quantity: '30'
                          created_at: '2024-01-14T13:58:08.000000Z'
                          updated_at: '2024-01-14T13:58:08.000000Z'
  /admin/bot-status/update:
    post:
      tags:
        - Admin > Restaurant > Bar Order Ticket
      summary: update bar items status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bot_id: 65
                bot_items:
                  - item_id: 61
                  - item_id: 62
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ask-bill/1:
    get:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: get ask bill data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ask-bills/order-number/{order_number}:
    get:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: get ask bill by order number
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_number
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/tables/ask-bill/print:
    post:
      tags:
        - Admin > Restaurant > Ask Bill
      summary: print ask bill
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/kot-items/update:
    post:
      tags:
        - Admin > Restaurant > KOT Items
      summary: update kot items quantity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                orderDetails:
                  - id: 4
                    quantity: 5
                    note: my note
                    topping_details:
                      - topping_id: 9
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 170
                      - topping_id: 10
                        topping_product_id: 3
                        topping_quantity: 90
                        topping_price: 500
                  - id: 5
                    quantity: 100
                    note: my note
                    topping_details:
                      - topping_id: 23
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 600
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/bot-items/update:
    post:
      tags:
        - Admin > Restaurant > BOT Items
      summary: update bot items quantity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                orderDetails:
                  - id: 1
                    quantity: 10
                    topping_details:
                      - topping_id: 9
                        topping_product_id: 3
                        topping_quantity: 50
                        topping_price: 170
                      - topping_id: 10
                        topping_product_id: 3
                        topping_quantity: 90
                        topping_price: 500
                  - id: 61
                    quantity: 40
                    note: BOT Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: create delivery partner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner:
                  type: string
                  example: Pathao
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show all delivery partner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 22 Jan 2024 07:57:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    delivery_partner: Pathao
                    created_at: '2024-01-22T06:52:21.000000Z'
                    orders:
                      - id: 123
                        order_number: 202422EEQXJ
                        company_id: 1
                        user_id: 10
                        table_id: 5
                        customer_id: 1
                        pickup_user_id: 1
                        description: ab cd ef gh
                        status: pending
                        created_at: '2024-01-22T07:39:06.000000Z'
                        table_number: T5
  /admin/delivery-partner/{id}:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update delivery partner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                delivery_partner:
                  type: string
                  example: bhojdeal
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: delete delivery partner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show single delivery part data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/update:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update order of delivery partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 123
                description: ab cd ef gh
                delivery_partner_id: 2
                productDetails:
                  - product_variation_id: 8
                    price: 100
                    quantity: 5
                  - product_variation_id: 6
                    price: 100
                    quantity: 5
                    note: My Note
                  - product_variation_id: 7
                    price: 150
                    quantity: 1
                    note: My Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/status/update/{order_id}:
    post:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: update delivery user order status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/delivery-partner/order/{order_id}:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show self delivery part order data by ordeer id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner-sales-data/3:
    get:
      tags:
        - Admin > Restaurant > Delivery partner
      summary: show delivery partner sales data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery-user:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: create self delivery user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Ayush
                mobile_no:
                  type: integer
                  example: '9843455665'
                location:
                  type: string
                  example: KTM
                time:
                  type: string
                  example: 01:00 PM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 22 Jan 2024 11:28:01 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  full_name: Ayush
                  mobile_no: '9843455665'
                  location: KTM
                  time: 01:00 PM
                message: Delivery User Created Successfully!
    get:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: show all self delivery user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery-user/{id}:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: update self delivery user details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: Drishya Poudel
                mobile_no:
                  type: integer
                  example: '9843455665'
                location:
                  type: string
                  example: KTM
                time:
                  type: string
                  example: 01:00 PM
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: delete self delivery user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: show self delivery user order detail by id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/self-delivery/order/update:
    post:
      tags:
        - Admin > Restaurant > Self Delivery User
      summary: update order of self delivery user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 46
                description: ab cd ef gh
                self_delivery_user_id: 1
                productDetails:
                  - product_id: 1
                    price: 100
                    quantity: 5
                    topping_details:
                      - topping_product_id: 5
                        topping_quantity: 50
                        topping_price: 110
                      - topping_product_id: 7
                        topping_quantity: 50
                        topping_price: 110
                  - product_id: 6
                    price: 100
                    quantity: 5
                    note: My Note
                  - product_id: 7
                    price: 150
                    quantity: 1
                    note: My Note
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: create split bill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 20
                split_name: Split 1
                splitdetails:
                  - item_id: 8
                    product_name: Momo
                    price: 100
                    quantity: 5
                  - item_id: 8
                    product_name: Momo
                    price: 100
                    quantity: 4
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Split Bill
      summary: show all split bill
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 30 Jan 2024 09:01:06 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 4
                    company_id: 1
                    order_id: 2
                    split_name: Split 1
                    split_status: primary
                    payment_status: null
                    created_at: '2024-01-30T08:44:34.000000Z'
                    split_bill_details:
                      - id: 18
                        company_id: 1
                        split_bill_id: 4
                        item_id: '67'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:44:34.000000Z'
                        updated_at: '2024-01-30T08:44:34.000000Z'
                      - id: 19
                        company_id: 1
                        split_bill_id: 4
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:44:34.000000Z'
                        updated_at: '2024-01-30T08:44:34.000000Z'
                  - id: 3
                    company_id: 1
                    order_id: 1
                    split_name: ''
                    split_status: primary
                    payment_status: null
                    created_at: '2024-01-30T08:27:28.000000Z'
                    split_bill_details:
                      - id: 3
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:27:28.000000Z'
                        updated_at: '2024-01-30T08:27:28.000000Z'
                      - id: 4
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:27:28.000000Z'
                        updated_at: '2024-01-30T08:27:28.000000Z'
                      - id: 15
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:30:30.000000Z'
                        updated_at: '2024-01-30T08:30:30.000000Z'
                      - id: 16
                        company_id: 1
                        split_bill_id: 3
                        item_id: '8'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:30:30.000000Z'
                        updated_at: '2024-01-30T08:30:30.000000Z'
                      - id: 17
                        company_id: 1
                        split_bill_id: 3
                        item_id: '67'
                        product_name: Momo
                        price: 100
                        quantity: 5
                        created_at: '2024-01-30T08:37:48.000000Z'
                        updated_at: '2024-01-30T08:37:48.000000Z'
  /admin/split-bill/update/data:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: update split bill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                splits:
                  - order_id: 2
                    split_name: Split 1
                    splitdetails:
                      - item_id: 69
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 2
                      - item_id: 8
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 5
                  - order_id: 2
                    split_name: Split 38
                    splitdetails:
                      - item_id: 689
                        order_id: 2
                        product_name: Momo
                        price: 100
                        quantity: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill/total-bill/show:
    get:
      tags:
        - Admin > Restaurant > Split Bill
      summary: show split total bill amount
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: order_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill-payment:
    post:
      tags:
        - Admin > Restaurant > Split Bill
      summary: store split bill payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order_id: 2
                split_id: 1
                payment_method_id: 1
                customer_id: 1
                subtotal: 344
                tax: 3
                discount: 3434
                discount_type: rupees
                net_total: 100
                paid: 50
                return: 344
                net_amount: 34434
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/split-bill/{id}:
    delete:
      tags:
        - Admin > Restaurant > Split Bill
      summary: delete split bill
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cash-in-out:
    post:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: store chas in/out
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                  example: '1'
                received:
                  type: integer
                  example: '454'
                paid:
                  type: integer
                  example: '454'
                remarks:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 22 Feb 2024 08:25:18 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  particular: hh
                  amount: '454'
                  receive_paid: Received
                  remarks: hy
                  updated_at: '2024-02-22T08:25:18.000000Z'
                  created_at: '2024-02-22T08:25:18.000000Z'
                  id: 1
                message: Cash In/Out saved successfully!
    get:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: get all cash in/out
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cash-in-out/{id}:
    post:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: update cash in/out
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                particular:
                  type: string
                  example: fg
                received:
                  type: integer
                  example: '55'
                paid:
                  type: integer
                  example: '55'
                remarks:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Cash In/Out
      summary: delete cash in/out
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/topping-items:
    post:
      tags:
        - Admin > Restaurant > Topping Items
      summary: store topping items
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Cheese
                price:
                  type: integer
                  example: '60'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Restaurant > Topping Items
      summary: get all toping items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/topping-items/{id}:
    post:
      tags:
        - Admin > Restaurant > Topping Items
      summary: update topping items
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Chesse2
                price:
                  type: integer
                  example: '45'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Restaurant > Topping Items
      summary: delete topping item
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service-session-start:
    post:
      tags:
        - Admin > Restaurant > Manager Session
      summary: store business day on
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service-session-start/4:
    post:
      tags:
        - Admin > Restaurant > Manager Session
      summary: make manager session end
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                note:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service-session-check:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: check session
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-today-session:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: get all cashier today session data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/cashier-today-sales:
    get:
      tags:
        - Admin > Restaurant > Manager Session
      summary: get cashier today sales data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/day-books:
    get:
      tags:
        - Admin > Restaurant > Day Book
      summary: get all day books
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: date
          in: query
          schema:
            type: string
          example: 03-25-2024
        - name: cashier
          in: query
          schema:
            type: string
          example: Hancie
        - name: employee
          in: query
          schema:
            type: string
          example: Rakesh
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard:
    get:
      tags:
        - Admin > Restaurant > Restaurant Dashboard
      summary: show all dashboard data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delivery-partner-payment:
    post:
      tags:
        - Admin > Restaurant > Delivery Partner Payment
      summary: store delivery partner payment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_option_id:
                  type: integer
                  example: '1'
                paid_amount:
                  type: integer
                  example: '400'
                branch_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/printers:
    post:
      tags:
        - Admin > Printers
      summary: store printer data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 1
                printer_name: aa
                paper_width: aa
                ip_address: aa
                printer_types:
                  - printer_type: BOT
                  - printer_type: KOT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Printers
      summary: show single company printer data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/printers/{id}:
    delete:
      tags:
        - Admin > Printers
      summary: Delete printer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roles:
    post:
      tags:
        - Admin > roles OLD
      summary: create roles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                role_name:
                  type: string
                  example: cashier
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > roles OLD
      summary: get all roles
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > roles OLD
      summary: remove role
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments:
    post:
      tags:
        - Admin > Human Resource > department
      summary: create department
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Cash
                description:
                  type: string
                  example: ghghg
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 25 Dec 2023 10:00:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  title: Cash
                  description: null
                  slug: cash
                  updated_at: '2023-12-25T10:00:55.000000Z'
                  created_at: '2023-12-25T10:00:55.000000Z'
                  id: 2
                message: Department created successfully!
    get:
      tags:
        - Admin > Human Resource > department
      summary: get all department list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments/{department id}:
    delete:
      tags:
        - Admin > Human Resource > department
      summary: delete department
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/departments/{department_id}:
    post:
      tags:
        - Admin > Human Resource > department
      summary: update department
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: My Title
                description:
                  type: string
                  example: My Description
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: department_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/positions:
    post:
      tags:
        - Admin > Human Resource > positions
      summary: create positions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Position
                description:
                  type: string
                  example: Description
                is_housekeeping:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Human Resource > positions
      summary: get all position
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 06:27:22 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    title: Position
                    slug: position
                    description: Description
                    status: active
                    is_housekeeping: 1
                    created_at: '2023-12-25T11:24:16.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/positions?page=1
                  last: http://127.0.0.1:8000/admin/positions?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/positions?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/positions
                  per_page: 5
                  to: 1
                  total: 1
  /admin/positions/{position_id}:
    post:
      tags:
        - Admin > Human Resource > positions
      summary: update position details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Position
                description:
                  type: string
                  example: Description
                is_housekeeping:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: position_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 06:28:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  title: Position
                  slug: position
                  description: Description
                  status: active
                  is_housekeeping: '1'
                  created_at: '2023-12-25T11:24:16.000000Z'
                  updated_at: '2023-12-25T11:24:16.000000Z'
                message: Position data updated successfully!
    delete:
      tags:
        - Admin > Human Resource > positions
      summary: delete position
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: position_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/employees:
    post:
      tags:
        - Admin > Human Resource > employees
      summary: create employees
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                position_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: employee name
                short_name:
                  type: string
                  example: em
                description:
                  type: string
                  example: employee description
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:17:25 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  position_id: '1'
                  name: employee name
                  short_name: em
                  description: employee description
                  slug: employee-name
                  updated_at: '2023-12-26T07:17:25.000000Z'
                  created_at: '2023-12-26T07:17:25.000000Z'
                  id: 1
                message: Employee created successfully!
    get:
      tags:
        - Admin > Human Resource > employees
      summary: get all employees list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:18:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    position_id: 1
                    name: employee name
                    short_name: em
                    slug: employee-name
                    description: employee description
                    status: active
                    created_at: '2023-12-26T07:17:25.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/employees?page=1
                  last: http://127.0.0.1:8000/admin/employees?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/employees?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/employees
                  per_page: 5
                  to: 1
                  total: 1
  /admin/employees/{id}:
    delete:
      tags:
        - Admin > Human Resource > employees
      summary: delete employee
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Human Resource > employees
      summary: update employee
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                position_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: employee name
                short_name:
                  type: string
                  example: emp
                description:
                  type: string
                  example: employee description
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 07:31:41 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  position_id: '1'
                  name: employee name
                  short_name: emp
                  slug: employee-name
                  description: employee description
                  status: active
                  created_at: '2023-12-26T07:17:25.000000Z'
                  updated_at: '2023-12-26T07:31:41.000000Z'
                message: Employee record updated successfully!
  /admin/roster-time:
    post:
      tags:
        - Admin > Duty Roster > roster time
      summary: create roster time
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 12:00 AM
                type:
                  type: string
                  example: hotel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:30:31 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  title: 05:00 AM
                  type: hotel
                  updated_at: '2023-12-26T09:30:31.000000Z'
                  created_at: '2023-12-26T09:30:31.000000Z'
                  id: 1
                message: Roster time created successfully!
    get:
      tags:
        - Admin > Duty Roster > roster time
      summary: show all roster time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: type
          in: query
          schema:
            type: string
          example: hotel
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:07:48 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 2
                    company_id: 1
                    title: 08:00 PM
                    status: active
                    created_at: '2023-12-26T02:45:32.000000Z'
                  - id: 1
                    company_id: 1
                    title: 05:00 PM
                    status: active
                    created_at: '2023-12-26T02:44:55.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/roster_time?page=1
                  last: http://127.0.0.1:8000/admin/roster_time?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/roster_time?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/roster_time
                  per_page: 5
                  to: 2
                  total: 2
  /admin/roster-time/{id}:
    post:
      tags:
        - Admin > Duty Roster > roster time
      summary: update roster time
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 08:00 PM
                type:
                  type: string
                  example: restaurant
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 09:01:11 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data: true
                message: Roster time created successfully!
    delete:
      tags:
        - Admin > Duty Roster > roster time
      summary: delete roster time
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roster-task:
    post:
      tags:
        - Admin > Duty Roster > roster task
      summary: create roaster task
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: washing
                type:
                  type: string
                  example: restaurant
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Duty Roster > roster task
      summary: show all roster task
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: type
          in: query
          schema:
            type: string
          example: hotel
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/roster-task/{id}:
    post:
      tags:
        - Admin > Duty Roster > roster task
      summary: update roster task
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: washing1
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 27 Dec 2023 06:26:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '56'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: washing1
                  slug: washing1
                  type: restaurant
                  status: active
                  created_at: '2023-12-26T11:37:16.000000Z'
                  updated_at: '2023-12-27T06:26:50.000000Z'
                message: Roster Task Updated Successfully!
  /admin/roster-task/2:
    delete:
      tags:
        - Admin > Duty Roster > roster task
      summary: delete roster task
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 27 Dec 2023 06:29:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: washing1
                  slug: washing1
                  type: restaurant
                  status: active
                  created_at: '2023-12-26T11:37:16.000000Z'
                  updated_at: '2023-12-27T06:26:50.000000Z'
                message: Roster Task Deleted Successfully!
  /admin/restaurant-roster:
    post:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: create restaurant roster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                floor_plan_id: 2
                floor_type: hotel
                date: '2023-08-23'
                roster_task_time_employee:
                  - roster_task_id: 1
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 1
                  - roster_task_id: 2
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/restaurant-floor-plan:
    get:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: get all roster list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: date
          in: query
          schema:
            type: string
          example: '2023-08-23'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Mon, 01 Jan 2024 08:02:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - floor_plan:
                      id: 4
                      company_id: 1
                      floor_name: Floor 4
                      description: f1
                      created_at: '2023-12-18T05:55:11.000000Z'
                      updated_at: '2023-12-18T06:05:20.000000Z'
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '2'
                            employee: null
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee: null
                  - floor_plan: null
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 2
                              company_id: 1
                              position_id: 1
                              name: Shyam
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                  - floor_plan: null
                    date: '2023-08-23'
                    roster_task_time_employee:
                      - roster_task_id: '1'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                      - roster_task_id: '2'
                        roster_time_employee:
                          - roster_time_id: '1'
                            employee:
                              id: 1
                              company_id: 1
                              position_id: 1
                              name: Hari
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
                          - roster_time_id: '2'
                            employee:
                              id: 2
                              company_id: 1
                              position_id: 1
                              name: Shyam
                              short_name: emp
                              slug: employee-name
                              description: employee description
                              status: active
                              created_at: '2023-12-26T01:32:25.000000Z'
                              position:
                                id: 1
                                company_id: 1
                                title: Position
                                slug: position
                                description: Description
                                status: active
                                is_housekeeping: 1
                                created_at: '2023-12-25T05:39:16.000000Z'
                                updated_at: '2023-12-25T05:39:16.000000Z'
  /admin/restaurant-roster/update:
    post:
      tags:
        - Admin > Duty Roster > restaurant roster
      summary: update restaurant roster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PATCH
                floor_id: 9
                date: '2023-08-23'
                roster_task_time_employee:
                  - roster_task_id: 1
                    roster_time_employee:
                      - roster_time_id: 2
                        employee_id: 122
                      - roster_time_id: 2
                        employee_id: 1
                  - roster_task_id: 2
                    roster_time_employee:
                      - roster_time_id: 1
                        employee_id: 1
                      - roster_time_id: 2
                        employee_id: 200
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hotel-floors:
    post:
      tags:
        - Admin > Hotel > hotel floor
      summary: create hotel floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                description:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:42:55 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  title: hy
                  company_id: 1
                  description: hy
                  slug: hy
                  updated_at: '2023-12-28T11:42:55.000000Z'
                  created_at: '2023-12-28T11:42:55.000000Z'
                  id: 1
                message: Floor created successfully!
    get:
      tags:
        - Admin > Hotel > hotel floor
      summary: get all hotel floor list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:47:45 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    company_id: 1
                    title: hy
                    slug: hy
                    description: hy
                    status: active
                    created_at: '2023-12-28T11:42:55.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/hotel-floors?page=1
                  last: http://127.0.0.1:8000/admin/hotel-floors?page=1
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/hotel-floors?page=1
                      label: '1'
                      active: true
                    - url: null
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/hotel-floors
                  per_page: 5
                  to: 1
                  total: 1
  /admin/hotel-floors/{id}:
    post:
      tags:
        - Admin > Hotel > hotel floor
      summary: update hotel floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                description:
                  type: string
                  example: fgfg
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:54:03 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: hy
                  slug: hy
                  description: fgfg
                  status: active
                  created_at: '2023-12-28T11:53:49.000000Z'
                  updated_at: '2023-12-28T11:54:03.000000Z'
                message: Floor updated successfully!
    delete:
      tags:
        - Admin > Hotel > hotel floor
      summary: delete hotel floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Thu, 28 Dec 2023 11:56:02 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  company_id: 1
                  title: hy
                  slug: hy
                  description: fgfg
                  status: active
                  created_at: '2023-12-28T11:53:49.000000Z'
                  updated_at: '2023-12-28T11:54:03.000000Z'
                message: Floor deleted successfully!
  /admin/unit-measurements:
    post:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: store unit of measurement
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unit_name:
                  type: string
                  example: kg
                code:
                  type: integer
                  example: '3433'
                factor:
                  type: integer
                  example: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:07:15 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  unit_name: ml
                  code: '3433'
                  factor: '2'
                  updated_at: '2024-02-27T07:07:15.000000Z'
                  created_at: '2024-02-27T07:07:15.000000Z'
                  id: 1
                message: Unit Measurement Created Successfully!
    get:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: get all unit of measurements
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: ml
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:07:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '56'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    unit_name: ml
                    code: '3433'
                    factor: '2'
  /admin/unit-measurements/{id}:
    post:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: update unit of measurement
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unit_name:
                  type: string
                  example: ml
                code:
                  type: string
                  example: eer
                factor:
                  type: integer
                  example: '454353'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:15:34 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_id: 1
                  unit_name: unit
                  code: eer
                  factor: '454353'
                  created_at: '2024-02-27T07:07:15.000000Z'
                  updated_at: '2024-02-27T07:15:34.000000Z'
                message: Unit Updated Successfully!
    delete:
      tags:
        - Admin > Inventory > Unit of Measurement
      summary: delete unit of measurement
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/inventory-products:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: store inventory products
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: Momo
                sku:
                  type: integer
                  example: '453534'
                measurement_unit_id:
                  type: integer
                  example: '44'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 07:53:51 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  company_id: 1
                  product_name: Momo
                  sku: '453534'
                  unit: '44'
                  updated_at: '2024-02-27T07:53:51.000000Z'
                  created_at: '2024-02-27T07:53:51.000000Z'
                  id: 2
                message: Unit Measurement Created Successfully!
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: get all inventory product list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: momo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/inventory-products/{id}:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: update inventory product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: hgj
                sku:
                  type: integer
                  example: '43545'
                measurement_unit_id:
                  type: integer
                  example: '4545'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Inventory > Inventory Products
      summary: delete inventory product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/inventory-adjustments:
    post:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: store inventory adjustment data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2023-05-23'
                reason: Breakage
                description: aa aa
                products:
                  - product_id: 1
                    quantity_on_hand: 23
                    adjusted_quantity: 2
                    adjust_quantity: 4
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: get all inventory adjustment data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 28 Feb 2024 10:54:21 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 12
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 12
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 12
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 4
                        created_at: '2024-02-28T10:44:49.000000Z'
                        updated_at: '2024-02-28T10:44:49.000000Z'
                  - id: 11
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 11
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 11
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: -3
                        created_at: '2024-02-28T10:44:38.000000Z'
                        updated_at: '2024-02-28T10:44:38.000000Z'
                  - id: 10
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 10
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 10
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: -3
                        created_at: '2024-02-28T10:43:54.000000Z'
                        updated_at: '2024-02-28T10:43:54.000000Z'
                  - id: 9
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 9
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 9
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 3
                        created_at: '2024-02-28T10:43:01.000000Z'
                        updated_at: '2024-02-28T10:43:01.000000Z'
                  - id: 8
                    date: '2023-05-23'
                    reason: Breakage
                    description: aa aa
                    inventory_adjustment_details:
                      - id: 8
                        company_id: 1
                        user_id: 10
                        inventory_adjustment_id: 8
                        product_id: 1
                        quantity_on_hand: 23
                        adjusted_quantity: 2
                        adjust_quantity: 3
                        created_at: '2024-02-28T10:30:00.000000Z'
                        updated_at: '2024-02-28T10:30:00.000000Z'
                links:
                  first: http://127.0.0.1:8000/admin/inventory-adjustments?page=1
                  last: http://127.0.0.1:8000/admin/inventory-adjustments?page=3
                  prev: null
                  next: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                meta:
                  current_page: 1
                  from: 1
                  last_page: 3
                  links:
                    - url: null
                      label: '&laquo; Previous'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=1
                      label: '1'
                      active: true
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                      label: '2'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=3
                      label: '3'
                      active: false
                    - url: http://127.0.0.1:8000/admin/inventory-adjustments?page=2
                      label: Next &raquo;
                      active: false
                  path: http://127.0.0.1:8000/admin/inventory-adjustments
                  per_page: 5
                  to: 5
                  total: 11
  /admin/inventory-adjustments/{id}:
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: show single inventory data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company-details:
    get:
      tags:
        - Admin > Company OLD
      summary: get company details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Wed, 03 Jan 2024 10:30:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  business_name: Akriti Hotel
                  slug: business
                  display_name: B
                  address: KTM
                  primary_email: admin@gmail.com
                  primary_phone: '984334645'
                  vat_number: '454545'
                  registration_number: '54545'
                  start_date: '454545'
                  company_image: >-
                    http://localhost:8000/storage/1/BDD0688FF02068E5C427B0954F8A2297.webp
                  user_id: 1
  /api/admin/login:
    post:
      tags:
        - Admin > Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/refresh-token/{refresh_token}:
    post:
      tags:
        - Admin > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/logout:
    post:
      tags:
        - Admin > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user-detail:
    get:
      tags:
        - Admin > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/list-user-branches:
    get:
      tags:
        - Admin > Authentication
      summary: list user branches
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/update-user-detail:
    post:
      tags:
        - Admin > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                name:
                  type: string
                  example: Super admin
                profile_image:
                  type: string
                  format: binary
                delete_image:
                  type: string
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/change-password:
    post:
      tags:
        - Admin > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/delete-user:
    delete:
      tags:
        - Admin > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/invitation-accept-reject:
    post:
      tags:
        - Admin > Authentication
      summary: invitation accept-reject
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: >-
                    18qmUzzNc2NGQCpQBhKGmZGZvsVtIQEvQKDhUgs6HF59FI9soR3XT9DjMTMwd0G2Pzt6SHHJw7aH1MvRMWdOqeMXGvOIWp4mQz0pCwVO7aCRchsjwd7tqN8DnbwsxDfI
                email:
                  type: string
                  example: liboki3597@nimadir.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                is_accepted:
                  type: boolean
                  description: true|false
                  example: 'true'
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/my-invitations:
    get:
      tags:
        - Admin > Authentication
      summary: my invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/my-invitation/{id}/accept-reject:
    post:
      tags:
        - Admin > Authentication
      summary: my invitations accept-reject
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: >-
                    jVRbNDicfvdNO3ERhQ32FRQRFuzzs0aUi4lkuHCWprQEFdXMHWKBZrGm2TRhJxzCU7dp6kG13UYVeGTZVLiuC1wvclUZQoJKIJxGtUfNymLaOcr2DLkrt2fyCQ7LqVmb
                is_accepted:
                  type: boolean
                  description: true|false
                  example: 'true'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '42'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/permission:
    get:
      tags:
        - Admin > Permission
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: show_in
          in: query
          schema:
            type: string
          description: superadmin_panel|admin_panel
          example: admin_panel
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/permission/{id}:
    get:
      tags:
        - Admin > Permission
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role:
    post:
      tags:
        - Admin > Role
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: superwaiter10
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Role
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          description: 1||0
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          description: '||name'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role/{id}:
    post:
      tags:
        - Admin > Role
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: superadmin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Role
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/role/{id}/assign-permission:
    post:
      tags:
        - Admin > Role
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{id}:
    post:
      tags:
        - Admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                business_name:
                  type: string
                  example: Business
                display_name:
                  type: string
                  example: By
                address:
                  type: string
                  example: KTM
                primary_email:
                  type: string
                  example: admin@gmail.com
                primary_phone:
                  type: integer
                  example: '984334645'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                bill_heading:
                  type: string
                  example: sfg
                bill_remarks:
                  type: string
                  example: fgdhg
                is_tax:
                  type: string
                  example: active
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Company
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Company
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user:
    get:
      tags:
        - Admin > Company
      summary: company users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/assign-update-user:
    post:
      tags:
        - Admin > Company
      summary: assign or update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: liboki3597@nimadir.com
                roles:
                  - manager
                branch_ids:
                  - 1
                is_resend: null
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user/invitations:
    get:
      tags:
        - Admin > Company
      summary: list company user invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/unassign-user:
    post:
      tags:
        - Admin > Company
      summary: unassign user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 29
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/user-data-update:
    post:
      tags:
        - Admin > Company
      summary: user data update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 10
                roles:
                  - view-accountingfirm-dashboard
                branch_ids:
                  - 1
                  - 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch:
    post:
      tags:
        - Admin > Branch
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  example: '5'
                address:
                  type: string
                  example: Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti02@gmail.com
                primary_phone:
                  type: integer
                  example: '980678204'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: string
                  example: '2020-10-10'
                bill_heading:
                  type: string
                bill_remarks:
                  type: string
                is_tax:
                  type: string
                  example: inactive
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Branch
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/{id}:
    post:
      tags:
        - Admin > Branch
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                company_id:
                  type: integer
                  example: '5'
                address:
                  type: string
                  example: Purano Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti02@gmail.com
                primary_phone:
                  type: integer
                  example: '980678204'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: string
                  example: '2020-10-10'
                is_tax:
                  type: string
                  example: inactive
                bill_heading:
                  type: string
                bill_remarks:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Branch
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Branch
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/branch/{id}/update-status:
    post:
      tags:
        - Admin > Branch
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                password:
                  type: integer
                  example: '12345'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/account-verification:
    post:
      tags:
        - Public > auth
      summary: complete registration
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: WzNnomyLsm0rQ09Y8X77hNBBvAQqYBfcPhx6Gi7d1vYbIup9TNtYwO80b2Ha
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin-login:
    post:
      tags:
        - Public > auth
      summary: super admin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company:
    post:
      tags:
        - Superadmin > company old
      summary: create company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Kitchen King
                display_name:
                  type: string
                  example: K. King
                address:
                  type: string
                  example: Purano Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: akriti01@gmail.com
                primary_phone:
                  type: integer
                  example: '980678203'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > company old
      summary: get all company list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: business
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{company_id}:
    get:
      tags:
        - Superadmin > company old
      summary: get single company detail
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > company old
      summary: delete company
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Superadmin > company old
      summary: update company details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Business
                display_name:
                  type: string
                  example: By
                address:
                  type: string
                  example: KTM
                primary_email:
                  type: string
                  example: admin@gmail.com
                primary_phone:
                  type: integer
                  example: '984334645'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
                bill_heading:
                  type: string
                  example: sfg
                bill_remarks:
                  type: string
                  example: fgdhg
                is_tax:
                  type: string
                  example: active
                _method:
                  type: string
                  example: put
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service:
    post:
      tags:
        - Superadmin > business service
      summary: create business service
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  example: '1'
                hotel:
                  type: string
                  example: hotel
                restaurant:
                  type: string
                  example: restaurant
                event:
                  type: string
                  example: event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > business service
      summary: get all company business service list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service/{id}:
    get:
      tags:
        - Superadmin > business service
      summary: get single business service data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service/{company_id}:
    post:
      tags:
        - Superadmin > business service
      summary: update business service
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hotel:
                  type: string
                  example: hotel
                restaurant:
                  type: string
                  example: restaurant
                event:
                  type: string
                  example: event
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-admin:
    post:
      tags:
        - Superadmin > business admin
      summary: create business admin account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                business_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/login:
    post:
      tags:
        - Superadmin > Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/refresh-token/{refresh_token}:
    post:
      tags:
        - Superadmin > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/logout:
    post:
      tags:
        - Superadmin > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user-detail:
    get:
      tags:
        - Superadmin > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/update-user-detail:
    post:
      tags:
        - Superadmin > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                name:
                  type: string
                  example: Super admin
                profile_image:
                  type: string
                  format: binary
                delete_image:
                  type: string
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/change-password:
    post:
      tags:
        - Superadmin > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/delete-user:
    delete:
      tags:
        - Superadmin > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission:
    get:
      tags:
        - Superadmin > Permission
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: show_in
          in: query
          schema:
            type: string
          description: superadmin_panel|admin_panel
          example: superadmin_panel
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission/{id}:
    get:
      tags:
        - Superadmin > Permission
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role:
    post:
      tags:
        - Superadmin > Role
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: waiter1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          description: 1||0
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          description: '||name'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}:
    post:
      tags:
        - Superadmin > Role
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: waiter2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Role
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}/assign-permission:
    post:
      tags:
        - Superadmin > Role
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user:
    post:
      tags:
        - Superadmin > User
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user2@email.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 2
                image:
                  type: string
                  format: binary
                company_id:
                  type: string
                roles[]:
                  type: string
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: status
          in: query
          schema:
            type: string
          description: '||active,inactive'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: role
          in: query
          schema:
            type: string
          description: superadmin
        - name: roles
          in: query
          schema:
            type: string
          description: '["superadmin","admin"]'
        - name: superadmin_panel_users
          in: query
          schema:
            type: string
          description: 1|0
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}:
    post:
      tags:
        - Superadmin > User
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 1
                company_id:
                  type: string
                roles[]:
                  type: string
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > User
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-role:
    post:
      tags:
        - Superadmin > User
      summary: assign role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                roles:
                  - admin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-permission:
    post:
      tags:
        - Superadmin > User
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/dashboard:
    get:
      tags:
        - Superadmin > Dashboard
      summary: dashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package:
    post:
      tags:
        - Superadmin > Package
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Standard0 Package
                user: 3
                table: 12
                menu_item: 8
                period_prices:
                  - period: 30
                    price: 1000
                    branch_price: 800
                  - period: 90
                    price: 2800
                    branch_price: 1500
                  - period: 180
                    price: 5200
                    branch_price: 4000
                  - period: 365
                    price: 10000
                    branch_price: 6000
                is_trial: false
                is_recommended: true
                type: restaurant
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Package
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: in:active,inactive
        - name: is_trial
          in: query
          schema:
            type: string
          description: true|false
        - name: is_recommended
          in: query
          schema:
            type: string
          description: true|false
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package/{id}:
    post:
      tags:
        - Superadmin > Package
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                name: Standard Package
                user: 3
                table: 12
                menu_item: 8
                period_prices:
                  - id: 3
                    period: 30
                    price: 1001
                    branch_price: 801
                  - id: 4
                    period: 90
                    price: 2801
                    branch_price: 1501
                  - id: 5
                    period: 180
                    price: 5201
                    branch_price: 4001
                  - id: 6
                    period: 365
                    price: 10001
                    branch_price: 6001
                  - period: 730
                    price: 15001
                    branch_price: 11001
                is_trial: false
                is_recommended: false
                type: restaurant
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Package
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Package
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/package/{id}/update-status:
    post:
      tags:
        - Superadmin > Package
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                status: active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/subscribe-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: subscribe package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 4
                period: 30
                price: 1001
                branch_price: 1001
                no_of_branch: 2
                discount: null
                user: 1
                table: 10
                menu_item: 10
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/modify-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: modify package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 4
                period: 30
                price: 1011
                branch_price: 1001
                no_of_branch: 2
                discount: null
                user: 11
                table: 12
                menu_item: 13
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/unsubscribe-package:
    post:
      tags:
        - Superadmin > Company > Package Subscription
      summary: unsubscribe package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company:
    post:
      tags:
        - Superadmin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Company 2 Org
                display_name:
                  type: string
                  example: Company 2
                address:
                  type: string
                  example: BaneshworM, Kathmandu
                primary_email:
                  type: string
                  example: company2@company.com
                primary_phone:
                  type: integer
                  example: '9876543211'
                vat_number:
                  type: integer
                  example: '123456'
                registration_number:
                  type: integer
                  example: '123456'
                start_date:
                  type: string
                  example: '2020-10-10'
                company_image:
                  type: string
                  format: binary
                is_tax:
                  type: string
                  example: active
                service_ids[]:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Company
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: '||active,inactive'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}:
    post:
      tags:
        - Superadmin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                business_name:
                  type: string
                  example: K King
                display_name:
                  type: string
                  example: K. King
                address:
                  type: string
                  example: Purano Baneshwor, Kathmandu
                primary_email:
                  type: string
                  example: jedibe5032@shaflyn.com
                primary_phone:
                  type: integer
                  example: '980678200'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: string
                  example: '2020-10-10'
                is_tax:
                  type: string
                  example: active
                service_ids[]:
                  type: integer
                  example: '8'
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Company
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Company
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{id}/update-status:
    post:
      tags:
        - Superadmin > Company
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/owner:
    get:
      tags:
        - Superadmin > Company
      summary: company owner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/assign-update-owner:
    post:
      tags:
        - Superadmin > Company
      summary: assign or update owner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: makogo3528@sentrau.com
                is_resend: null
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/owner/invitations:
    get:
      tags:
        - Superadmin > Company
      summary: list company owner invitations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/company/{company_id}/unassign-owner:
    post:
      tags:
        - Superadmin > Company
      summary: unassign owner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/service:
    get:
      tags:
        - Superadmin > Service
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: in:active,inactive
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/service/{id}:
    get:
      tags:
        - Superadmin > Service
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug:
    post:
      tags:
        - Superadmin > Bug
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: bug 1
                screenshot:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug/{id}:
    post:
      tags:
        - Superadmin > Bug
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                description:
                  type: string
                  example: bug 1 e
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Bug
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug/{id}/update-status:
    post:
      tags:
        - Superadmin > Bug
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: dsfasdfa
                bug_id:
                  type: integer
                  example: '6'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug Feedback
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: bug_id
          in: query
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback/{id}:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                comment:
                  type: string
                  example: 'abc def '
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Bug Feedback
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Bug Feedback
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/bug-feedback/{id}/update-status:
    post:
      tags:
        - Superadmin > Bug Feedback
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting:
    get:
      tags:
        - Superadmin > Site Setting
      summary: site setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Superadmin > Site Setting
      summary: site setting update or create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Scodus
                address:
                  type: string
                  example: Nepal
                primary_email:
                  type: string
                  example: info@scodus.com
                secondary_email:
                  type: string
                primary_phone:
                  type: string
                secondary_phone:
                  type: string
                map_location:
                  type: string
                registration_number:
                  type: string
                linkedin_url:
                  type: string
                facebook_url:
                  type: string
                twitter_url:
                  type: string
                youtube_url:
                  type: string
                instagram_url:
                  type: string
                logo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
