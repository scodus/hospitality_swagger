openapi: 3.0.0
info:
  title: Hospitality Management
  description: Hospitality Management API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://hospitality-api.nrnaglobal.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > company
  - name: Admin > business service
  - name: Admin > business admin
  - name: Admin > customer
  - name: Admin > user
  - name: Admin > table
  - name: Admin > floor
  - name: Admin > product category
  - name: Admin > products
  - name: Admin > product variation
  - name: Public
  - name: Public > auth
paths:
  /admin/company:
    post:
      tags:
        - Admin > company
      summary: create company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Business
                display_name:
                  type: string
                  example: B
                address:
                  type: string
                  example: KTM
                primary_email:
                  type: string
                  example: admin1@gmail.com
                primary_phone:
                  type: integer
                  example: '9843346455'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > company
      summary: get all company list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{company_id}:
    get:
      tags:
        - Admin > company
      summary: get single company detail
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > company
      summary: delete company
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > company
      summary: update company details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_name:
                  type: string
                  example: Business
                display_name:
                  type: string
                  example: By
                address:
                  type: string
                  example: KTM
                primary_email:
                  type: string
                  example: admin@gmail.com
                primary_phone:
                  type: integer
                  example: '984334645'
                vat_number:
                  type: integer
                  example: '454545'
                registration_number:
                  type: integer
                  example: '54545'
                start_date:
                  type: integer
                  example: '454545'
                company_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: company_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service:
    post:
      tags:
        - Admin > business service
      summary: create business service
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  example: '1'
                hotel:
                  type: string
                  example: hotel
                restaurant:
                  type: boolean
                  example: 'true'
                event:
                  type: boolean
                  example: 'true'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > business service
      summary: get all company business service list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-service/{id}:
    get:
      tags:
        - Admin > business service
      summary: get single business service data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-admin:
    post:
      tags:
        - Admin > business admin
      summary: create business admin account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                business_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers:
    post:
      tags:
        - Admin > customer
      summary: create customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie2@gmail.com
                phone:
                  type: integer
                  example: '4545454555'
                address:
                  type: string
                  example: KTM
                company_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > customer
      summary: get all customers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '4'
        - name: company_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers/{customer_id}:
    delete:
      tags:
        - Admin > customer
      summary: delete customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > customer
      summary: update customer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie2@gmail.com
                phone:
                  type: integer
                  example: '4545454555'
                address:
                  type: string
                  example: Jhapa
                company_id:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > customer
      summary: show single customer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customer_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users:
    post:
      tags:
        - Admin > user
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago@gmail.com
                company_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > user
      summary: get all users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{user_id}:
    post:
      tags:
        - Admin > user
      summary: update user data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > user
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables:
    post:
      tags:
        - Admin > table
      summary: create table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table t2
                table_capacity:
                  type: integer
                  example: '3'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > table
      summary: get all company details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/{table_id}:
    post:
      tags:
        - Admin > table
      summary: update table data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T2
                description:
                  type: string
                  example: Table T2
                table_capacity:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > table
      summary: delete table
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: table_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors:
    post:
      tags:
        - Admin > floor
      summary: create floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F58
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > floor
      summary: get all floor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/{floor_id}:
    post:
      tags:
        - Admin > floor
      summary: update floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: Floor 4
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: string
                  example: T5
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: floor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > floor
      summary: delete floor
      parameters:
        - name: floor_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category:
    post:
      tags:
        - Admin > product category
      summary: create product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '1'
                description:
                  type: string
                  example: My momo
                bar:
                  type: integer
                  example: '1'
                category_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > product category
      summary: get all product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-category/{slug}:
    post:
      tags:
        - Admin > product category
      summary: update product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category_id:
                  type: integer
                  example: '20'
                description:
                  type: string
                  example: My momo
                category_image:
                  type: string
                  format: binary
                bar:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > product category
      summary: delete product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > product category
      summary: show single product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products:
    post:
      tags:
        - Admin > products
      summary: create product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Momo
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_variation: 1
                variations:
                  - variation_name: Steam Momo
                    price: 100
                  - variation_name: Fry Momo
                    price: 200
                base_price: 550
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 07:18:08 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  product_name: Momo
                  slug: momo
                  product_category_id: 1
                  base_price: 550
                  ingredient: gffg
                  description: fgfgfg
                  product_image: ''
                  has_variation: 1
                  product_variation:
                    - id: 1
                      variation_name: Steam Momo
                      price: 100
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                    - id: 2
                      variation_name: Fry Momo
                      price: 200
                      created_at: '2023-12-19T07:18:08.000000Z'
                      updated_at: '2023-12-19T07:18:08.000000Z'
                message: Product Has Been Created Successfully!
    get:
      tags:
        - Admin > products
      summary: get all products
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/{slug}:
    post:
      tags:
        - Admin > products
      summary: update product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_name: Chicken
                product_category_id: 1
                ingredient: gffg
                description: fgfgfg
                has_variation: 1
                variations:
                  - id: 34
                    variation_name: Steam
                    price: 200
                  - variation_name: '2'
                    price: 200
                base_price: 550
                _method: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > products
      summary: delete product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations:
    get:
      tags:
        - Admin > product variation
      summary: get all product variations
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 19 Dec 2023 10:54:36 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '57'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 5
                    variation_name: Steam Momo
                    price: 100
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
                  - id: 6
                    variation_name: Fry Momo
                    price: 200
                    created_at: '2023-12-19T07:59:56.000000Z'
                    updated_at: '2023-12-19T07:59:56.000000Z'
  /admin/product-variations/{id}:
    delete:
      tags:
        - Admin > product variation
      summary: delete product variation
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                password:
                  type: integer
                  example: '12345'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/account-verification:
    post:
      tags:
        - Public > auth
      summary: complete registration
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: rTfyAhNiQHbTL2PddibDH0j9bM8PYSsMcY7SvRuwKqfZgYsHB0m31Bk6g71e
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin-login:
    post:
      tags:
        - Public > auth
      summary: super admin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
